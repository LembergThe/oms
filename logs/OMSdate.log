[2020-04-01 10:12:59,999]DEBUG 21328[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testDelete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2020-04-01 10:13:00,006]DEBUG 21335[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest.testDelete()
[2020-04-01 10:13:00,007]DEBUG 21336[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanRole()
[2020-04-01 10:13:00,008]DEBUG 21337[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testContextFile' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2020-04-01 10:13:00,009]DEBUG 21338[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.testContextFile()
[2020-04-01 10:13:00,010]DEBUG 21339[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanDB()
[2020-04-01 10:13:00,010]DEBUG 21339[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanUser()
[2020-04-01 10:13:00,011]DEBUG 21340[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanRegion()
[2020-04-01 10:13:00,012]DEBUG 21341[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanProduct()
[2020-04-01 10:13:00,012]DEBUG 21341[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrderStatus()
[2020-04-01 10:13:00,013]DEBUG 21342[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrderItem()
[2020-04-01 10:13:00,013]DEBUG 21342[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrder()
[2020-04-01 10:13:00,014]DEBUG 21343[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanDimension()
[2020-04-01 10:13:00,015]DEBUG 21344[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanCustomerType()
[2020-04-01 10:13:00,016]DEBUG 21345[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:749) - Found finalize() method - using NO_OVERRIDE
[2020-04-01 10:13:00,017]DEBUG 21346[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:761) - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
[2020-04-01 10:13:00,018]DEBUG 21347[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
[2020-04-01 10:13:00,018]DEBUG 21347[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:766) - Found 'hashCode' method: public native int java.lang.Object.hashCode()
[2020-04-01 10:13:00,018]DEBUG 21347[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
[2020-04-01 10:13:00,019]DEBUG 21348[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
[2020-04-01 10:13:00,020]DEBUG 21349[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
[2020-04-01 10:13:00,021]DEBUG 21350[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
[2020-04-01 10:13:00,021]DEBUG 21350[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
[2020-04-01 10:13:00,022]DEBUG 21351[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2020-04-01 10:13:00,022]DEBUG 21351[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2020-04-01 10:13:00,023]DEBUG 21352[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
[2020-04-01 10:13:00,023]DEBUG 21352[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
[2020-04-01 10:13:00,023]DEBUG 21352[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
[2020-04-01 10:13:00,024]DEBUG 21353[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
[2020-04-01 10:13:00,024]DEBUG 21353[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
[2020-04-01 10:13:00,024]DEBUG 21353[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[2020-04-01 10:13:00,024]DEBUG 21353[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[2020-04-01 10:13:00,025]DEBUG 21354[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
[2020-04-01 10:13:00,025]DEBUG 21354[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
[2020-04-01 10:13:00,025]DEBUG 21354[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
[2020-04-01 10:13:00,025]DEBUG 21354[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
[2020-04-01 10:13:00,026]DEBUG 21355[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
[2020-04-01 10:13:00,026]DEBUG 21355[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
[2020-04-01 10:13:00,026]DEBUG 21355[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2020-04-01 10:13:00,026]DEBUG 21355[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
[2020-04-01 10:13:00,027]DEBUG 21356[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
[2020-04-01 10:13:00,027]DEBUG 21356[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
[2020-04-01 10:13:00,058]DEBUG 21387[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetStandartTypeDiscount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2020-04-01 10:13:00,060]DEBUG 21389[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@1817d8b6 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@4594a115, testMethod = testGetStandartTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2020-04-01 10:13:00,060]DEBUG 21389[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.retrieveConfigurationAttributes(TransactionalTestExecutionListener.java:466) - Retrieved @TransactionConfiguration [@org.springframework.test.context.transaction.TransactionConfiguration(defaultRollback=true, transactionManager=transactionManager)] for test class [class com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2020-04-01 10:13:00,061]DEBUG 21390[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.retrieveConfigurationAttributes(TransactionalTestExecutionListener.java:483) - Retrieved TransactionConfigurationAttributes [[TransactionConfigurationAttributes@249c9ae transactionManagerName = 'transactionManager', defaultRollback = true]] for class [class com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2020-04-01 10:13:00,061]DEBUG 21390[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2020-04-01 10:13:00,061]DEBUG 21390[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testGetStandartTypeDiscount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2020-04-01 10:13:00,062]DEBUG 21391[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15857251800
[2020-04-01 10:13:00,063]DEBUG 21392[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@3c29e307] for Hibernate transaction
[2020-04-01 10:13:00,063]DEBUG 21392[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@3c29e307]
[2020-04-01 10:13:00,063]DEBUG 21392[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2020-04-01 10:13:00,064]DEBUG 21393[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2020-04-01 10:13:00,064]DEBUG 21393[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2020-04-01 10:13:00,064]DEBUG 21393[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@1817d8b6 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@4594a115, testMethod = testGetStandartTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2020-04-01 10:13:00,065] INFO 21394[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (1): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@ea6e1ae]; rollback [true]
[2020-04-01 10:13:00,065]DEBUG 21394[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2020-04-01 10:13:00,067]DEBUG 21396[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,068]DEBUG 21397[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2020-04-01 10:13:00,070]DEBUG 21399[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 1
[2020-04-01 10:13:00,071]DEBUG 21400[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,071]DEBUG 21400[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2020-04-01 10:13:00,072]DEBUG 21401[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,072]DEBUG 21401[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2020-04-01 10:13:00,074]DEBUG 21403[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 2
[2020-04-01 10:13:00,075]DEBUG 21404[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,076]DEBUG 21405[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2020-04-01 10:13:00,077]DEBUG 21406[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,078]DEBUG 21407[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2020-04-01 10:13:00,081]DEBUG 21410[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 3
[2020-04-01 10:13:00,082]DEBUG 21411[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,084]DEBUG 21413[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2020-04-01 10:13:00,085]DEBUG 21414[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,086]DEBUG 21415[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2020-04-01 10:13:00,089]DEBUG 21418[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 4
[2020-04-01 10:13:00,090]DEBUG 21419[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,092]DEBUG 21421[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: from com.softserveinc.edu.oms.domain.entities.CustomerType customerT where customerT.typeName = :Standard
[2020-04-01 10:13:00,100]DEBUG 21429[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  |  |  +-[IDENT] Node: 'com'
    |        |  |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
    |        |  |  |  |  |  \-[IDENT] Node: 'edu'
    |        |  |  |  |  \-[IDENT] Node: 'oms'
    |        |  |  |  \-[IDENT] Node: 'domain'
    |        |  |  \-[IDENT] Node: 'entities'
    |        |  \-[IDENT] Node: 'CustomerType'
    |        \-[ALIAS] Node: 'customerT'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'customerT'
          |  \-[IDENT] Node: 'typeName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'Standard'

[2020-04-01 10:13:00,101]DEBUG 21430[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2020-04-01 10:13:00,103]DEBUG 21432[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
[2020-04-01 10:13:00,104]DEBUG 21433[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.CustomerType (customerT) -> customerty0_
[2020-04-01 10:13:00,110]DEBUG 21439[main] - org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  customerT -> customerty0_.ID
[2020-04-01 10:13:00,113]DEBUG 21442[main] - org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : typeName -> org.hibernate.type.StringType@42919b58
[2020-04-01 10:13:00,114]DEBUG 21443[main] - org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  customerT.typeName -> customerty0_.TypeName
[2020-04-01 10:13:00,117]DEBUG 21446[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
[2020-04-01 10:13:00,117]DEBUG 21446[main] - org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} CustomerTypes customerty0_ ) ( where ( = ( customerty0_.TypeName customerty0_.ID typeName ) ? ) ) )
[2020-04-01 10:13:00,128]DEBUG 21457[main] - org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
[2020-04-01 10:13:00,135]DEBUG 21464[main] - org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [CustomerTypes customerty0_]
[2020-04-01 10:13:00,136]DEBUG 21465[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
[2020-04-01 10:13:00,137]DEBUG 21466[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerTypes)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'customerty0_.ID as ID2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=customerT,role=null,tableName=CustomerTypes,tableAlias=customerty0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.CustomerType}}}
    |  \-[SQL_TOKEN] SqlFragment: 'customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[customerT], fromElementByTableAlias=[customerty0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerTypes customerty0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=customerT,role=null,tableName=CustomerTypes,tableAlias=customerty0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.CustomerType}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customerty0_.TypeName' {propertyName=typeName,dereferenceType=ALL,propertyPath=typeName,path=customerT.typeName,tableAlias=customerty0_,className=com.softserveinc.edu.oms.domain.entities.CustomerType,classAlias=customerT}
          |  +-[ALIAS_REF] IdentNode: 'customerty0_.ID' {alias=customerT, className=com.softserveinc.edu.oms.domain.entities.CustomerType, tableAlias=customerty0_}
          |  \-[IDENT] IdentNode: 'typeName' {originalText=typeName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=Standard, expectedType=org.hibernate.type.StringType@42919b58}

[2020-04-01 10:13:00,137]DEBUG 21466[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2020-04-01 10:13:00,140]DEBUG 21469[main] - org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:241) - HQL: from com.softserveinc.edu.oms.domain.entities.CustomerType customerT where customerT.typeName = :Standard
[2020-04-01 10:13:00,141]DEBUG 21470[main] - org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:242) - SQL: select customerty0_.ID as ID2_, customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_ from CustomerTypes customerty0_ where customerty0_.TypeName=?
[2020-04-01 10:13:00,141]DEBUG 21470[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2020-04-01 10:13:00,150]DEBUG 21479[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,151]DEBUG 21480[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,151]DEBUG 21480[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,151]DEBUG 21480[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,152]DEBUG 21481[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,152]DEBUG 21481[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=3, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,153]DEBUG 21482[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=4, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,153]DEBUG 21482[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=2, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,153]DEBUG 21482[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=1, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,154]DEBUG 21483[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,154]DEBUG 21483[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select customerty0_.ID as ID2_, customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_ from CustomerTypes customerty0_ where customerty0_.TypeName=?
[2020-04-01 10:13:00,156]DEBUG 21485[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2020-04-01 10:13:00,156]DEBUG 21485[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#1]
[2020-04-01 10:13:00,157]DEBUG 21486[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2020-04-01 10:13:00,157]DEBUG 21486[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,157]DEBUG 21486[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2020-04-01 10:13:00,159]DEBUG 21488[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,160]DEBUG 21489[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,161]DEBUG 21490[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,162]DEBUG 21491[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,162]DEBUG 21491[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,162]DEBUG 21491[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=3, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,163]DEBUG 21492[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=4, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,163]DEBUG 21492[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=2, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,164]DEBUG 21493[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=1, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,164]DEBUG 21493[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,164]DEBUG 21493[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2020-04-01 10:13:00,165]DEBUG 21494[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,166]DEBUG 21495[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,167]DEBUG 21496[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,167]DEBUG 21496[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,168]DEBUG 21497[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,168]DEBUG 21497[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,169]DEBUG 21498[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=3, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,169]DEBUG 21498[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=4, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,170]DEBUG 21499[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=2, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,170]DEBUG 21499[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=1, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,171]DEBUG 21500[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,171]DEBUG 21500[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2020-04-01 10:13:00,172]DEBUG 21501[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,172]DEBUG 21501[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,172]DEBUG 21501[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,173]DEBUG 21502[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,173]DEBUG 21502[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,173]DEBUG 21502[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,174]DEBUG 21503[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=3, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,174]DEBUG 21503[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=4, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,174]DEBUG 21503[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=2, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,174]DEBUG 21503[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=1, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,175]DEBUG 21504[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,175]DEBUG 21504[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2020-04-01 10:13:00,176]DEBUG 21505[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,176]DEBUG 21505[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,177]DEBUG 21506[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,177]DEBUG 21506[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,177]DEBUG 21506[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,178]DEBUG 21507[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,178]DEBUG 21507[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=3, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,178]DEBUG 21507[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=4, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,178]DEBUG 21507[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=2, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,179]DEBUG 21508[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=1, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,179]DEBUG 21508[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,179]DEBUG 21508[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2020-04-01 10:13:00,180]DEBUG 21509[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,181]DEBUG 21510[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,181]DEBUG 21510[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,181]DEBUG 21510[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,181]DEBUG 21510[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,182]DEBUG 21511[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,182]DEBUG 21511[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=3, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,182]DEBUG 21511[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=4, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,182]DEBUG 21511[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=2, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,183]DEBUG 21512[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=1, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,183]DEBUG 21512[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,183]DEBUG 21512[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2020-04-01 10:13:00,184]DEBUG 21513[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,184]DEBUG 21513[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,185]DEBUG 21514[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,185]DEBUG 21514[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,185]DEBUG 21514[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,186]DEBUG 21515[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,186]DEBUG 21515[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=3, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,186]DEBUG 21515[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=4, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,186]DEBUG 21515[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=2, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,187]DEBUG 21516[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=1, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,187]DEBUG 21516[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,187]DEBUG 21516[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2020-04-01 10:13:00,188]DEBUG 21517[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,189]DEBUG 21518[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,189]DEBUG 21518[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,189]DEBUG 21518[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,190]DEBUG 21519[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,190]DEBUG 21519[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,190]DEBUG 21519[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=3, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,190]DEBUG 21519[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=4, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,191]DEBUG 21520[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=2, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,191]DEBUG 21520[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=1, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,191]DEBUG 21520[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,191]DEBUG 21520[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2020-04-01 10:13:00,192]DEBUG 21521[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,193]DEBUG 21522[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,193]DEBUG 21522[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,193]DEBUG 21522[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,194]DEBUG 21523[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,194]DEBUG 21523[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,194]DEBUG 21523[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=3, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,194]DEBUG 21523[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=4, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,195]DEBUG 21524[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=2, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,195]DEBUG 21524[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=1, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,195]DEBUG 21524[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,196]DEBUG 21525[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2020-04-01 10:13:00,196]DEBUG 21525[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,197]DEBUG 21526[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,197]DEBUG 21526[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,197]DEBUG 21526[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,198]DEBUG 21527[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,198]DEBUG 21527[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,198]DEBUG 21527[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=3, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,198]DEBUG 21527[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=4, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,199]DEBUG 21528[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=2, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,199]DEBUG 21528[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=1, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,199]DEBUG 21528[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,199]DEBUG 21528[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2020-04-01 10:13:00,200]DEBUG 21529[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,201]DEBUG 21530[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@1817d8b6 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@4594a115, testMethod = testGetStandartTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2020-04-01 10:13:00,201]DEBUG 21530[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2020-04-01 10:13:00,201]DEBUG 21530[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@3c29e307]
[2020-04-01 10:13:00,201]DEBUG 21530[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2020-04-01 10:13:00,203]DEBUG 21532[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2020-04-01 10:13:00,204]DEBUG 21533[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2020-04-01 10:13:00,204]DEBUG 21533[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@3c29e307] after transaction
[2020-04-01 10:13:00,204]DEBUG 21533[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2020-04-01 10:13:00,205]DEBUG 21534[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2020-04-01 10:13:00,205]DEBUG 21534[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2020-04-01 10:13:00,205] INFO 21534[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@1817d8b6 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@4594a115, testMethod = testGetStandartTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2020-04-01 10:13:00,206]DEBUG 21535[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@1817d8b6 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@4594a115, testMethod = testGetStandartTypeDiscount@CustomerTypeDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2020-04-01 10:13:00,206]DEBUG 21535[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2020-04-01 10:13:00,207]DEBUG 21536[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2020-04-01 10:13:00,207]DEBUG 21536[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@1817d8b6 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@30cd59ff, testMethod = [null], testException = [null]]].
[2020-04-01 10:13:00,207]DEBUG 21536[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2020-04-01 10:13:00,207]DEBUG 21536[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2020-04-01 10:13:00,208]DEBUG 21537[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2020-04-01 10:13:00,208]DEBUG 21537[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2020-04-01 10:13:00,209]DEBUG 21538[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2020-04-01 10:13:00,209]DEBUG 21538[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2020-04-01 10:13:00,209]DEBUG 21538[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2020-04-01 10:13:00,209]DEBUG 21538[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2020-04-01 10:13:00,209]DEBUG 21538[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2020-04-01 10:13:00,210]DEBUG 21539[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2020-04-01 10:13:00,210]DEBUG 21539[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2020-04-01 10:13:00,210]DEBUG 21539[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2020-04-01 10:13:00,210]DEBUG 21539[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2020-04-01 10:13:00,211]DEBUG 21540[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2020-04-01 10:13:00,211]DEBUG 21540[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2020-04-01 10:13:00,211]DEBUG 21540[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2020-04-01 10:13:00,211]DEBUG 21540[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2020-04-01 10:13:00,212]DEBUG 21541[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2020-04-01 10:13:00,212]DEBUG 21541[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2020-04-01 10:13:00,212]DEBUG 21541[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2020-04-01 10:13:00,212]DEBUG 21541[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2020-04-01 10:13:00,213]DEBUG 21542[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' with 0 common interceptors and 1 specific interceptors
[2020-04-01 10:13:00,213]DEBUG 21542[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@30cd59ff]
[2020-04-01 10:13:00,214]DEBUG 21543[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetSilverTypeDiscount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2020-04-01 10:13:00,214]DEBUG 21543[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@1817d8b6 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@30cd59ff, testMethod = testGetSilverTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2020-04-01 10:13:00,214]DEBUG 21543[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2020-04-01 10:13:00,215]DEBUG 21544[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testGetSilverTypeDiscount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2020-04-01 10:13:00,215]DEBUG 21544[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15857251802
[2020-04-01 10:13:00,215]DEBUG 21544[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@5bca5ab0] for Hibernate transaction
[2020-04-01 10:13:00,215]DEBUG 21544[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@5bca5ab0]
[2020-04-01 10:13:00,216]DEBUG 21545[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2020-04-01 10:13:00,216]DEBUG 21545[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2020-04-01 10:13:00,216]DEBUG 21545[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2020-04-01 10:13:00,216]DEBUG 21545[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@1817d8b6 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@30cd59ff, testMethod = testGetSilverTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2020-04-01 10:13:00,217] INFO 21546[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (2): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@ea6e1ae]; rollback [true]
[2020-04-01 10:13:00,217]DEBUG 21546[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2020-04-01 10:13:00,217]DEBUG 21546[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,218]DEBUG 21547[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2020-04-01 10:13:00,219]DEBUG 21548[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 5
[2020-04-01 10:13:00,219]DEBUG 21548[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,220]DEBUG 21549[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2020-04-01 10:13:00,220]DEBUG 21549[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,221]DEBUG 21550[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2020-04-01 10:13:00,222]DEBUG 21551[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 6
[2020-04-01 10:13:00,222]DEBUG 21551[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,223]DEBUG 21552[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2020-04-01 10:13:00,223]DEBUG 21552[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,223]DEBUG 21552[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2020-04-01 10:13:00,225]DEBUG 21554[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 7
[2020-04-01 10:13:00,225]DEBUG 21554[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,225]DEBUG 21554[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2020-04-01 10:13:00,226]DEBUG 21555[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,226]DEBUG 21555[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2020-04-01 10:13:00,227]DEBUG 21556[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 8
[2020-04-01 10:13:00,228]DEBUG 21557[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,229]DEBUG 21558[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: from com.softserveinc.edu.oms.domain.entities.CustomerType customerT where customerT.typeName = :Silver
[2020-04-01 10:13:00,233]DEBUG 21562[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  |  |  +-[IDENT] Node: 'com'
    |        |  |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
    |        |  |  |  |  |  \-[IDENT] Node: 'edu'
    |        |  |  |  |  \-[IDENT] Node: 'oms'
    |        |  |  |  \-[IDENT] Node: 'domain'
    |        |  |  \-[IDENT] Node: 'entities'
    |        |  \-[IDENT] Node: 'CustomerType'
    |        \-[ALIAS] Node: 'customerT'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'customerT'
          |  \-[IDENT] Node: 'typeName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'Silver'

[2020-04-01 10:13:00,233]DEBUG 21562[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2020-04-01 10:13:00,234]DEBUG 21563[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
[2020-04-01 10:13:00,234]DEBUG 21563[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.CustomerType (customerT) -> customerty0_
[2020-04-01 10:13:00,235]DEBUG 21564[main] - org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  customerT -> customerty0_.ID
[2020-04-01 10:13:00,235]DEBUG 21564[main] - org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : typeName -> org.hibernate.type.StringType@42919b58
[2020-04-01 10:13:00,236]DEBUG 21565[main] - org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  customerT.typeName -> customerty0_.TypeName
[2020-04-01 10:13:00,236]DEBUG 21565[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
[2020-04-01 10:13:00,236]DEBUG 21565[main] - org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} CustomerTypes customerty0_ ) ( where ( = ( customerty0_.TypeName customerty0_.ID typeName ) ? ) ) )
[2020-04-01 10:13:00,237]DEBUG 21566[main] - org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
[2020-04-01 10:13:00,238]DEBUG 21567[main] - org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [CustomerTypes customerty0_]
[2020-04-01 10:13:00,238]DEBUG 21567[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
[2020-04-01 10:13:00,239]DEBUG 21568[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerTypes)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'customerty0_.ID as ID2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=customerT,role=null,tableName=CustomerTypes,tableAlias=customerty0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.CustomerType}}}
    |  \-[SQL_TOKEN] SqlFragment: 'customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[customerT], fromElementByTableAlias=[customerty0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerTypes customerty0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=customerT,role=null,tableName=CustomerTypes,tableAlias=customerty0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.CustomerType}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customerty0_.TypeName' {propertyName=typeName,dereferenceType=ALL,propertyPath=typeName,path=customerT.typeName,tableAlias=customerty0_,className=com.softserveinc.edu.oms.domain.entities.CustomerType,classAlias=customerT}
          |  +-[ALIAS_REF] IdentNode: 'customerty0_.ID' {alias=customerT, className=com.softserveinc.edu.oms.domain.entities.CustomerType, tableAlias=customerty0_}
          |  \-[IDENT] IdentNode: 'typeName' {originalText=typeName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=Silver, expectedType=org.hibernate.type.StringType@42919b58}

[2020-04-01 10:13:00,239]DEBUG 21568[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2020-04-01 10:13:00,239]DEBUG 21568[main] - org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:241) - HQL: from com.softserveinc.edu.oms.domain.entities.CustomerType customerT where customerT.typeName = :Silver
[2020-04-01 10:13:00,240]DEBUG 21569[main] - org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:242) - SQL: select customerty0_.ID as ID2_, customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_ from CustomerTypes customerty0_ where customerty0_.TypeName=?
[2020-04-01 10:13:00,240]DEBUG 21569[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2020-04-01 10:13:00,241]DEBUG 21570[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,241]DEBUG 21570[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,241]DEBUG 21570[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,242]DEBUG 21571[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,242]DEBUG 21571[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,242]DEBUG 21571[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=5, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,242]DEBUG 21571[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=6, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,243]DEBUG 21572[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=7, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,243]DEBUG 21572[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=8, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,243]DEBUG 21572[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,244]DEBUG 21573[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select customerty0_.ID as ID2_, customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_ from CustomerTypes customerty0_ where customerty0_.TypeName=?
[2020-04-01 10:13:00,245]DEBUG 21574[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2020-04-01 10:13:00,246]DEBUG 21575[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#6]
[2020-04-01 10:13:00,246]DEBUG 21575[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2020-04-01 10:13:00,247]DEBUG 21576[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,247]DEBUG 21576[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2020-04-01 10:13:00,248]DEBUG 21577[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,248]DEBUG 21577[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,249]DEBUG 21578[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,249]DEBUG 21578[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,249]DEBUG 21578[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,250]DEBUG 21579[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=5, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,250]DEBUG 21579[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=6, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,250]DEBUG 21579[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=7, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,250]DEBUG 21579[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=8, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,251]DEBUG 21580[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,251]DEBUG 21580[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2020-04-01 10:13:00,252]DEBUG 21581[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,253]DEBUG 21582[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,253]DEBUG 21582[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,253]DEBUG 21582[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,253]DEBUG 21582[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,254]DEBUG 21583[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,254]DEBUG 21583[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=5, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,254]DEBUG 21583[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=6, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,254]DEBUG 21583[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=7, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,255]DEBUG 21584[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=8, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,255]DEBUG 21584[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,255]DEBUG 21584[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2020-04-01 10:13:00,256]DEBUG 21585[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,257]DEBUG 21586[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,257]DEBUG 21586[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,257]DEBUG 21586[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,258]DEBUG 21587[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,258]DEBUG 21587[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,258]DEBUG 21587[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=5, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,258]DEBUG 21587[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=6, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,259]DEBUG 21588[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=7, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,259]DEBUG 21588[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=8, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,259]DEBUG 21588[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,259]DEBUG 21588[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2020-04-01 10:13:00,260]DEBUG 21589[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,261]DEBUG 21590[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,261]DEBUG 21590[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,262]DEBUG 21591[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,262]DEBUG 21591[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,262]DEBUG 21591[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,262]DEBUG 21591[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=5, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,263]DEBUG 21592[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=6, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,263]DEBUG 21592[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=7, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,263]DEBUG 21592[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=8, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,264]DEBUG 21593[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,264]DEBUG 21593[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2020-04-01 10:13:00,265]DEBUG 21594[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,265]DEBUG 21594[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,266]DEBUG 21595[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,266]DEBUG 21595[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,266]DEBUG 21595[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,267]DEBUG 21596[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,267]DEBUG 21596[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=5, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,267]DEBUG 21596[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=6, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,267]DEBUG 21596[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=7, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,268]DEBUG 21597[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=8, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,268]DEBUG 21597[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,268]DEBUG 21597[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2020-04-01 10:13:00,269]DEBUG 21598[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,269]DEBUG 21598[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,270]DEBUG 21599[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,270]DEBUG 21599[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,270]DEBUG 21599[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,270]DEBUG 21599[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,271]DEBUG 21600[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=5, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,271]DEBUG 21600[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=6, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,271]DEBUG 21600[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=7, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,272]DEBUG 21601[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=8, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,272]DEBUG 21601[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,272]DEBUG 21601[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2020-04-01 10:13:00,273]DEBUG 21602[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,273]DEBUG 21602[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,274]DEBUG 21603[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,274]DEBUG 21603[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,274]DEBUG 21603[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,275]DEBUG 21604[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,275]DEBUG 21604[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=5, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,275]DEBUG 21604[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=6, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,275]DEBUG 21604[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=7, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,276]DEBUG 21605[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=8, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,276]DEBUG 21605[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,276]DEBUG 21605[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2020-04-01 10:13:00,277]DEBUG 21606[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,278]DEBUG 21607[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,278]DEBUG 21607[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,278]DEBUG 21607[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,279]DEBUG 21608[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,279]DEBUG 21608[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,279]DEBUG 21608[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=5, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,279]DEBUG 21608[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=6, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,280]DEBUG 21609[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=7, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,280]DEBUG 21609[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=8, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,280]DEBUG 21609[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,280]DEBUG 21609[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2020-04-01 10:13:00,281]DEBUG 21610[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,282]DEBUG 21611[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,282]DEBUG 21611[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,282]DEBUG 21611[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,283]DEBUG 21612[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,283]DEBUG 21612[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,283]DEBUG 21612[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=5, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,284]DEBUG 21613[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=6, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,284]DEBUG 21613[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=7, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,284]DEBUG 21613[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=8, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,284]DEBUG 21613[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,285]DEBUG 21614[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2020-04-01 10:13:00,285]DEBUG 21614[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,286]DEBUG 21615[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@1817d8b6 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@30cd59ff, testMethod = testGetSilverTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2020-04-01 10:13:00,286]DEBUG 21615[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2020-04-01 10:13:00,286]DEBUG 21615[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@5bca5ab0]
[2020-04-01 10:13:00,287]DEBUG 21616[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2020-04-01 10:13:00,287]DEBUG 21616[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2020-04-01 10:13:00,288]DEBUG 21617[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2020-04-01 10:13:00,288]DEBUG 21617[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@5bca5ab0] after transaction
[2020-04-01 10:13:00,288]DEBUG 21617[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2020-04-01 10:13:00,289]DEBUG 21618[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2020-04-01 10:13:00,289]DEBUG 21618[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2020-04-01 10:13:00,289] INFO 21618[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@1817d8b6 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@30cd59ff, testMethod = testGetSilverTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2020-04-01 10:13:00,290]DEBUG 21619[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@1817d8b6 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@30cd59ff, testMethod = testGetSilverTypeDiscount@CustomerTypeDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2020-04-01 10:13:00,290]DEBUG 21619[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2020-04-01 10:13:00,290]DEBUG 21619[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2020-04-01 10:13:00,291]DEBUG 21620[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@1817d8b6 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@5d415ce6, testMethod = [null], testException = [null]]].
[2020-04-01 10:13:00,291]DEBUG 21620[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2020-04-01 10:13:00,291]DEBUG 21620[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2020-04-01 10:13:00,292]DEBUG 21621[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2020-04-01 10:13:00,292]DEBUG 21621[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2020-04-01 10:13:00,292]DEBUG 21621[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2020-04-01 10:13:00,292]DEBUG 21621[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2020-04-01 10:13:00,293]DEBUG 21622[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2020-04-01 10:13:00,293]DEBUG 21622[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2020-04-01 10:13:00,293]DEBUG 21622[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2020-04-01 10:13:00,293]DEBUG 21622[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2020-04-01 10:13:00,294]DEBUG 21623[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2020-04-01 10:13:00,294]DEBUG 21623[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2020-04-01 10:13:00,294]DEBUG 21623[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2020-04-01 10:13:00,294]DEBUG 21623[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2020-04-01 10:13:00,295]DEBUG 21624[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2020-04-01 10:13:00,295]DEBUG 21624[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2020-04-01 10:13:00,295]DEBUG 21624[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2020-04-01 10:13:00,295]DEBUG 21624[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2020-04-01 10:13:00,296]DEBUG 21625[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2020-04-01 10:13:00,296]DEBUG 21625[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2020-04-01 10:13:00,296]DEBUG 21625[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2020-04-01 10:13:00,297]DEBUG 21626[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' with 0 common interceptors and 1 specific interceptors
[2020-04-01 10:13:00,297]DEBUG 21626[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@5d415ce6]
[2020-04-01 10:13:00,298]DEBUG 21627[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetGoldTypeDiscount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2020-04-01 10:13:00,298]DEBUG 21627[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@1817d8b6 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@5d415ce6, testMethod = testGetGoldTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2020-04-01 10:13:00,298]DEBUG 21627[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2020-04-01 10:13:00,299]DEBUG 21628[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testGetGoldTypeDiscount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2020-04-01 10:13:00,299]DEBUG 21628[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15857251802
[2020-04-01 10:13:00,300]DEBUG 21629[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@14bcc8dc] for Hibernate transaction
[2020-04-01 10:13:00,300]DEBUG 21629[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@14bcc8dc]
[2020-04-01 10:13:00,300]DEBUG 21629[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2020-04-01 10:13:00,300]DEBUG 21629[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2020-04-01 10:13:00,301]DEBUG 21630[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2020-04-01 10:13:00,301]DEBUG 21630[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@1817d8b6 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@5d415ce6, testMethod = testGetGoldTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2020-04-01 10:13:00,301] INFO 21630[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (3): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@ea6e1ae]; rollback [true]
[2020-04-01 10:13:00,301]DEBUG 21630[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2020-04-01 10:13:00,302]DEBUG 21631[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,302]DEBUG 21631[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2020-04-01 10:13:00,303]DEBUG 21632[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 9
[2020-04-01 10:13:00,304]DEBUG 21633[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,304]DEBUG 21633[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2020-04-01 10:13:00,305]DEBUG 21634[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,305]DEBUG 21634[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2020-04-01 10:13:00,306]DEBUG 21635[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 10
[2020-04-01 10:13:00,307]DEBUG 21636[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,307]DEBUG 21636[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2020-04-01 10:13:00,307]DEBUG 21636[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,308]DEBUG 21637[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2020-04-01 10:13:00,309]DEBUG 21638[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 11
[2020-04-01 10:13:00,309]DEBUG 21638[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,310]DEBUG 21639[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2020-04-01 10:13:00,310]DEBUG 21639[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,310]DEBUG 21639[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2020-04-01 10:13:00,312]DEBUG 21641[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 12
[2020-04-01 10:13:00,312]DEBUG 21641[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,313]DEBUG 21642[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: from com.softserveinc.edu.oms.domain.entities.CustomerType customerT where customerT.typeName = :Gold
[2020-04-01 10:13:00,316]DEBUG 21645[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  |  |  +-[IDENT] Node: 'com'
    |        |  |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
    |        |  |  |  |  |  \-[IDENT] Node: 'edu'
    |        |  |  |  |  \-[IDENT] Node: 'oms'
    |        |  |  |  \-[IDENT] Node: 'domain'
    |        |  |  \-[IDENT] Node: 'entities'
    |        |  \-[IDENT] Node: 'CustomerType'
    |        \-[ALIAS] Node: 'customerT'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'customerT'
          |  \-[IDENT] Node: 'typeName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'Gold'

[2020-04-01 10:13:00,317]DEBUG 21646[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2020-04-01 10:13:00,317]DEBUG 21646[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
[2020-04-01 10:13:00,318]DEBUG 21647[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.CustomerType (customerT) -> customerty0_
[2020-04-01 10:13:00,318]DEBUG 21647[main] - org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  customerT -> customerty0_.ID
[2020-04-01 10:13:00,318]DEBUG 21647[main] - org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : typeName -> org.hibernate.type.StringType@42919b58
[2020-04-01 10:13:00,319]DEBUG 21648[main] - org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  customerT.typeName -> customerty0_.TypeName
[2020-04-01 10:13:00,319]DEBUG 21648[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
[2020-04-01 10:13:00,319]DEBUG 21648[main] - org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} CustomerTypes customerty0_ ) ( where ( = ( customerty0_.TypeName customerty0_.ID typeName ) ? ) ) )
[2020-04-01 10:13:00,320]DEBUG 21649[main] - org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
[2020-04-01 10:13:00,320]DEBUG 21649[main] - org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [CustomerTypes customerty0_]
[2020-04-01 10:13:00,321]DEBUG 21650[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
[2020-04-01 10:13:00,321]DEBUG 21650[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerTypes)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'customerty0_.ID as ID2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=customerT,role=null,tableName=CustomerTypes,tableAlias=customerty0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.CustomerType}}}
    |  \-[SQL_TOKEN] SqlFragment: 'customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[customerT], fromElementByTableAlias=[customerty0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerTypes customerty0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=customerT,role=null,tableName=CustomerTypes,tableAlias=customerty0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.CustomerType}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customerty0_.TypeName' {propertyName=typeName,dereferenceType=ALL,propertyPath=typeName,path=customerT.typeName,tableAlias=customerty0_,className=com.softserveinc.edu.oms.domain.entities.CustomerType,classAlias=customerT}
          |  +-[ALIAS_REF] IdentNode: 'customerty0_.ID' {alias=customerT, className=com.softserveinc.edu.oms.domain.entities.CustomerType, tableAlias=customerty0_}
          |  \-[IDENT] IdentNode: 'typeName' {originalText=typeName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=Gold, expectedType=org.hibernate.type.StringType@42919b58}

[2020-04-01 10:13:00,322]DEBUG 21651[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2020-04-01 10:13:00,322]DEBUG 21651[main] - org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:241) - HQL: from com.softserveinc.edu.oms.domain.entities.CustomerType customerT where customerT.typeName = :Gold
[2020-04-01 10:13:00,322]DEBUG 21651[main] - org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:242) - SQL: select customerty0_.ID as ID2_, customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_ from CustomerTypes customerty0_ where customerty0_.TypeName=?
[2020-04-01 10:13:00,323]DEBUG 21652[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2020-04-01 10:13:00,323]DEBUG 21652[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,323]DEBUG 21652[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,324]DEBUG 21653[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,324]DEBUG 21653[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,324]DEBUG 21653[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,325]DEBUG 21654[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=11, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,325]DEBUG 21654[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=12, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,325]DEBUG 21654[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=9, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,326]DEBUG 21655[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=10, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,326]DEBUG 21655[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,326]DEBUG 21655[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select customerty0_.ID as ID2_, customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_ from CustomerTypes customerty0_ where customerty0_.TypeName=?
[2020-04-01 10:13:00,327]DEBUG 21656[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2020-04-01 10:13:00,328]DEBUG 21657[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#11]
[2020-04-01 10:13:00,328]DEBUG 21657[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2020-04-01 10:13:00,328]DEBUG 21657[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,329]DEBUG 21658[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2020-04-01 10:13:00,329]DEBUG 21658[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,329]DEBUG 21658[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,330]DEBUG 21659[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,330]DEBUG 21659[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,330]DEBUG 21659[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,331]DEBUG 21660[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=11, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,331]DEBUG 21660[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=12, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,331]DEBUG 21660[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=9, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,331]DEBUG 21660[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=10, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,332]DEBUG 21661[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,332]DEBUG 21661[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2020-04-01 10:13:00,333]DEBUG 21662[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,333]DEBUG 21662[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,334]DEBUG 21663[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,334]DEBUG 21663[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,334]DEBUG 21663[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,335]DEBUG 21664[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,335]DEBUG 21664[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=11, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,335]DEBUG 21664[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=12, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,335]DEBUG 21664[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=9, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,336]DEBUG 21665[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=10, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,336]DEBUG 21665[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,336]DEBUG 21665[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2020-04-01 10:13:00,337]DEBUG 21666[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,338]DEBUG 21667[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,338]DEBUG 21667[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,338]DEBUG 21667[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,339]DEBUG 21668[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,339]DEBUG 21668[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,339]DEBUG 21668[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=11, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,339]DEBUG 21668[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=12, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,340]DEBUG 21669[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=9, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,340]DEBUG 21669[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=10, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,340]DEBUG 21669[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,340]DEBUG 21669[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2020-04-01 10:13:00,341]DEBUG 21670[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,342]DEBUG 21671[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,342]DEBUG 21671[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,342]DEBUG 21671[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,343]DEBUG 21672[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,343]DEBUG 21672[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,343]DEBUG 21672[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=11, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,343]DEBUG 21672[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=12, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,344]DEBUG 21673[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=9, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,344]DEBUG 21673[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=10, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,344]DEBUG 21673[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,344]DEBUG 21673[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2020-04-01 10:13:00,345]DEBUG 21674[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,346]DEBUG 21675[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,346]DEBUG 21675[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,346]DEBUG 21675[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,347]DEBUG 21676[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,347]DEBUG 21676[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,347]DEBUG 21676[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=11, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,348]DEBUG 21677[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=12, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,348]DEBUG 21677[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=9, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,348]DEBUG 21677[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=10, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,348]DEBUG 21677[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,349]DEBUG 21678[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2020-04-01 10:13:00,349]DEBUG 21678[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,350]DEBUG 21679[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,350]DEBUG 21679[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,351]DEBUG 21680[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,351]DEBUG 21680[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,351]DEBUG 21680[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,351]DEBUG 21680[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=11, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,352]DEBUG 21681[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=12, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,352]DEBUG 21681[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=9, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,352]DEBUG 21681[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=10, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,353]DEBUG 21682[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,353]DEBUG 21682[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2020-04-01 10:13:00,354]DEBUG 21683[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,354]DEBUG 21683[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,354]DEBUG 21683[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,355]DEBUG 21684[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,355]DEBUG 21684[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,355]DEBUG 21684[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,356]DEBUG 21685[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=11, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,356]DEBUG 21685[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=12, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,356]DEBUG 21685[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=9, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,356]DEBUG 21685[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=10, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,357]DEBUG 21686[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,357]DEBUG 21686[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2020-04-01 10:13:00,358]DEBUG 21687[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,358]DEBUG 21687[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,359]DEBUG 21688[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,359]DEBUG 21688[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,359]DEBUG 21688[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,360]DEBUG 21689[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,360]DEBUG 21689[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=11, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,360]DEBUG 21689[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=12, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,360]DEBUG 21689[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=9, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,361]DEBUG 21690[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=10, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,361]DEBUG 21690[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,361]DEBUG 21690[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2020-04-01 10:13:00,362]DEBUG 21691[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,362]DEBUG 21691[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,363]DEBUG 21692[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,363]DEBUG 21692[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,363]DEBUG 21692[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,364]DEBUG 21693[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,364]DEBUG 21693[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=11, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,364]DEBUG 21693[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=12, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,364]DEBUG 21693[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=9, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,365]DEBUG 21694[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=10, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,365]DEBUG 21694[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,365]DEBUG 21694[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2020-04-01 10:13:00,366]DEBUG 21695[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,366]DEBUG 21695[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@1817d8b6 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@5d415ce6, testMethod = testGetGoldTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2020-04-01 10:13:00,367]DEBUG 21696[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2020-04-01 10:13:00,367]DEBUG 21696[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@14bcc8dc]
[2020-04-01 10:13:00,367]DEBUG 21696[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2020-04-01 10:13:00,370]DEBUG 21699[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2020-04-01 10:13:00,370]DEBUG 21699[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2020-04-01 10:13:00,371]DEBUG 21700[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@14bcc8dc] after transaction
[2020-04-01 10:13:00,371]DEBUG 21700[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2020-04-01 10:13:00,371]DEBUG 21700[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2020-04-01 10:13:00,371]DEBUG 21700[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2020-04-01 10:13:00,372] INFO 21701[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@1817d8b6 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@5d415ce6, testMethod = testGetGoldTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2020-04-01 10:13:00,372]DEBUG 21701[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@1817d8b6 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@5d415ce6, testMethod = testGetGoldTypeDiscount@CustomerTypeDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2020-04-01 10:13:00,373]DEBUG 21702[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2020-04-01 10:13:00,373]DEBUG 21702[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2020-04-01 10:13:00,373]DEBUG 21702[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@1817d8b6 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@51e8bbb4, testMethod = [null], testException = [null]]].
[2020-04-01 10:13:00,374]DEBUG 21703[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2020-04-01 10:13:00,374]DEBUG 21703[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2020-04-01 10:13:00,374]DEBUG 21703[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2020-04-01 10:13:00,375]DEBUG 21704[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2020-04-01 10:13:00,375]DEBUG 21704[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2020-04-01 10:13:00,375]DEBUG 21704[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2020-04-01 10:13:00,375]DEBUG 21704[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2020-04-01 10:13:00,376]DEBUG 21705[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2020-04-01 10:13:00,376]DEBUG 21705[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2020-04-01 10:13:00,376]DEBUG 21705[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2020-04-01 10:13:00,376]DEBUG 21705[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2020-04-01 10:13:00,376]DEBUG 21705[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2020-04-01 10:13:00,377]DEBUG 21706[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2020-04-01 10:13:00,377]DEBUG 21706[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2020-04-01 10:13:00,377]DEBUG 21706[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2020-04-01 10:13:00,377]DEBUG 21706[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2020-04-01 10:13:00,378]DEBUG 21707[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2020-04-01 10:13:00,378]DEBUG 21707[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2020-04-01 10:13:00,378]DEBUG 21707[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2020-04-01 10:13:00,378]DEBUG 21707[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2020-04-01 10:13:00,379]DEBUG 21708[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2020-04-01 10:13:00,379]DEBUG 21708[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' with 0 common interceptors and 1 specific interceptors
[2020-04-01 10:13:00,380]DEBUG 21709[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@51e8bbb4]
[2020-04-01 10:13:00,380]DEBUG 21709[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetPlatinumTypeDiscount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2020-04-01 10:13:00,381]DEBUG 21710[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@1817d8b6 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@51e8bbb4, testMethod = testGetPlatinumTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2020-04-01 10:13:00,381]DEBUG 21710[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2020-04-01 10:13:00,381]DEBUG 21710[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testGetPlatinumTypeDiscount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2020-04-01 10:13:00,382]DEBUG 21711[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15857251803
[2020-04-01 10:13:00,382]DEBUG 21711[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@3c7ec4e2] for Hibernate transaction
[2020-04-01 10:13:00,382]DEBUG 21711[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@3c7ec4e2]
[2020-04-01 10:13:00,382]DEBUG 21711[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2020-04-01 10:13:00,383]DEBUG 21712[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2020-04-01 10:13:00,383]DEBUG 21712[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2020-04-01 10:13:00,383]DEBUG 21712[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@1817d8b6 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@51e8bbb4, testMethod = testGetPlatinumTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2020-04-01 10:13:00,383] INFO 21712[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (4): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@ea6e1ae]; rollback [true]
[2020-04-01 10:13:00,384]DEBUG 21713[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2020-04-01 10:13:00,384]DEBUG 21713[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,384]DEBUG 21713[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2020-04-01 10:13:00,386]DEBUG 21715[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 13
[2020-04-01 10:13:00,386]DEBUG 21715[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,387]DEBUG 21716[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2020-04-01 10:13:00,387]DEBUG 21716[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,387]DEBUG 21716[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2020-04-01 10:13:00,388]DEBUG 21717[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 14
[2020-04-01 10:13:00,389]DEBUG 21718[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,389]DEBUG 21718[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2020-04-01 10:13:00,390]DEBUG 21719[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,390]DEBUG 21719[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2020-04-01 10:13:00,391]DEBUG 21720[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 15
[2020-04-01 10:13:00,391]DEBUG 21720[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,392]DEBUG 21721[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2020-04-01 10:13:00,392]DEBUG 21721[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,393]DEBUG 21722[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2020-04-01 10:13:00,394]DEBUG 21723[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 16
[2020-04-01 10:13:00,394]DEBUG 21723[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,395]DEBUG 21724[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: from com.softserveinc.edu.oms.domain.entities.CustomerType customerT where customerT.typeName = :Platinum
[2020-04-01 10:13:00,400]DEBUG 21729[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  |  |  +-[IDENT] Node: 'com'
    |        |  |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
    |        |  |  |  |  |  \-[IDENT] Node: 'edu'
    |        |  |  |  |  \-[IDENT] Node: 'oms'
    |        |  |  |  \-[IDENT] Node: 'domain'
    |        |  |  \-[IDENT] Node: 'entities'
    |        |  \-[IDENT] Node: 'CustomerType'
    |        \-[ALIAS] Node: 'customerT'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'customerT'
          |  \-[IDENT] Node: 'typeName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'Platinum'

[2020-04-01 10:13:00,401]DEBUG 21730[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2020-04-01 10:13:00,401]DEBUG 21730[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - select << begin [level=1, statement=select]
[2020-04-01 10:13:00,402]DEBUG 21731[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.CustomerType (customerT) -> customerty0_
[2020-04-01 10:13:00,402]DEBUG 21731[main] - org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  customerT -> customerty0_.ID
[2020-04-01 10:13:00,402]DEBUG 21731[main] - org.hibernate.hql.ast.tree.DotNode.getDataType(DotNode.java:613) - getDataType() : typeName -> org.hibernate.type.StringType@42919b58
[2020-04-01 10:13:00,403]DEBUG 21732[main] - org.hibernate.hql.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved :  customerT.typeName -> customerty0_.TypeName
[2020-04-01 10:13:00,403]DEBUG 21732[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - select : finishing up [level=1, statement=select]
[2020-04-01 10:13:00,404]DEBUG 21733[main] - org.hibernate.hql.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:625) - processQuery() :  ( SELECT ( FromClause{level=1} CustomerTypes customerty0_ ) ( where ( = ( customerty0_.TypeName customerty0_.ID typeName ) ? ) ) )
[2020-04-01 10:13:00,404]DEBUG 21733[main] - org.hibernate.hql.ast.HqlSqlWalker.createSelectClauseFromFromClause(HqlSqlWalker.java:868) - Derived SELECT clause created.
[2020-04-01 10:13:00,404]DEBUG 21733[main] - org.hibernate.hql.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:179) - Using FROM fragment [CustomerTypes customerty0_]
[2020-04-01 10:13:00,405]DEBUG 21734[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - select >> end [level=1, statement=select]
[2020-04-01 10:13:00,405]DEBUG 21734[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CustomerTypes)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'customerty0_.ID as ID2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=customerT,role=null,tableName=CustomerTypes,tableAlias=customerty0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.CustomerType}}}
    |  \-[SQL_TOKEN] SqlFragment: 'customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[customerT], fromElementByTableAlias=[customerty0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CustomerTypes customerty0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=customerT,role=null,tableName=CustomerTypes,tableAlias=customerty0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.CustomerType}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customerty0_.TypeName' {propertyName=typeName,dereferenceType=ALL,propertyPath=typeName,path=customerT.typeName,tableAlias=customerty0_,className=com.softserveinc.edu.oms.domain.entities.CustomerType,classAlias=customerT}
          |  +-[ALIAS_REF] IdentNode: 'customerty0_.ID' {alias=customerT, className=com.softserveinc.edu.oms.domain.entities.CustomerType, tableAlias=customerty0_}
          |  \-[IDENT] IdentNode: 'typeName' {originalText=typeName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=Platinum, expectedType=org.hibernate.type.StringType@42919b58}

[2020-04-01 10:13:00,406]DEBUG 21735[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2020-04-01 10:13:00,406]DEBUG 21735[main] - org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:241) - HQL: from com.softserveinc.edu.oms.domain.entities.CustomerType customerT where customerT.typeName = :Platinum
[2020-04-01 10:13:00,406]DEBUG 21735[main] - org.hibernate.hql.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:242) - SQL: select customerty0_.ID as ID2_, customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_ from CustomerTypes customerty0_ where customerty0_.TypeName=?
[2020-04-01 10:13:00,407]DEBUG 21736[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2020-04-01 10:13:00,407]DEBUG 21736[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,407]DEBUG 21736[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,408]DEBUG 21737[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,408]DEBUG 21737[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,408]DEBUG 21737[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,409]DEBUG 21738[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=13, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,409]DEBUG 21738[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=14, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,409]DEBUG 21738[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=15, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,409]DEBUG 21738[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=16, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,410]DEBUG 21739[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,410]DEBUG 21739[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select customerty0_.ID as ID2_, customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_ from CustomerTypes customerty0_ where customerty0_.TypeName=?
[2020-04-01 10:13:00,411]DEBUG 21740[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2020-04-01 10:13:00,412]DEBUG 21741[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#16]
[2020-04-01 10:13:00,412]DEBUG 21741[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2020-04-01 10:13:00,413]DEBUG 21742[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,413]DEBUG 21742[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2020-04-01 10:13:00,413]DEBUG 21742[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,414]DEBUG 21743[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,414]DEBUG 21743[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,414]DEBUG 21743[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,414]DEBUG 21743[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,415]DEBUG 21744[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=13, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,415]DEBUG 21744[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=14, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,415]DEBUG 21744[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=15, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,416]DEBUG 21745[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=16, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,416]DEBUG 21745[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,416]DEBUG 21745[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2020-04-01 10:13:00,417]DEBUG 21746[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,417]DEBUG 21746[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,418]DEBUG 21747[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,418]DEBUG 21747[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,418]DEBUG 21747[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,418]DEBUG 21747[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,419]DEBUG 21748[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=13, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,419]DEBUG 21748[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=14, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,419]DEBUG 21748[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=15, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,419]DEBUG 21748[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=16, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,420]DEBUG 21749[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,420]DEBUG 21749[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2020-04-01 10:13:00,421]DEBUG 21750[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,421]DEBUG 21750[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,422]DEBUG 21751[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,422]DEBUG 21751[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,422]DEBUG 21751[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,423]DEBUG 21752[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,423]DEBUG 21752[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=13, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,423]DEBUG 21752[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=14, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,423]DEBUG 21752[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=15, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,424]DEBUG 21753[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=16, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,424]DEBUG 21753[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,424]DEBUG 21753[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2020-04-01 10:13:00,425]DEBUG 21754[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,425]DEBUG 21754[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,426]DEBUG 21755[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,426]DEBUG 21755[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,426]DEBUG 21755[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,427]DEBUG 21756[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,427]DEBUG 21756[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=13, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,427]DEBUG 21756[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=14, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,427]DEBUG 21756[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=15, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,428]DEBUG 21757[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=16, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,428]DEBUG 21757[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,428]DEBUG 21757[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2020-04-01 10:13:00,429]DEBUG 21758[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,429]DEBUG 21758[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,430]DEBUG 21759[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,430]DEBUG 21759[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,430]DEBUG 21759[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,431]DEBUG 21760[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,431]DEBUG 21760[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=13, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,431]DEBUG 21760[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=14, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,431]DEBUG 21760[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=15, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,432]DEBUG 21761[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=16, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,432]DEBUG 21761[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,432]DEBUG 21761[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2020-04-01 10:13:00,433]DEBUG 21762[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,434]DEBUG 21763[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,434]DEBUG 21763[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,434]DEBUG 21763[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,434]DEBUG 21763[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,435]DEBUG 21764[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,435]DEBUG 21764[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=13, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,435]DEBUG 21764[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=14, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,435]DEBUG 21764[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=15, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,436]DEBUG 21765[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=16, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,436]DEBUG 21765[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,436]DEBUG 21765[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2020-04-01 10:13:00,437]DEBUG 21766[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,438]DEBUG 21767[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,438]DEBUG 21767[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,438]DEBUG 21767[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,438]DEBUG 21767[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,439]DEBUG 21768[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,439]DEBUG 21768[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=13, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,439]DEBUG 21768[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=14, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,439]DEBUG 21768[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=15, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,440]DEBUG 21769[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=16, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,440]DEBUG 21769[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,440]DEBUG 21769[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2020-04-01 10:13:00,441]DEBUG 21770[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,441]DEBUG 21770[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,442]DEBUG 21771[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,442]DEBUG 21771[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,442]DEBUG 21771[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,443]DEBUG 21772[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,443]DEBUG 21772[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=13, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,443]DEBUG 21772[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=14, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,444]DEBUG 21773[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=15, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,444]DEBUG 21773[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=16, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,444]DEBUG 21773[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,444]DEBUG 21773[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2020-04-01 10:13:00,445]DEBUG 21774[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,446]DEBUG 21775[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,446]DEBUG 21775[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,446]DEBUG 21775[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,447]DEBUG 21776[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,447]DEBUG 21776[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,447]DEBUG 21776[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=13, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,447]DEBUG 21776[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=14, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,448]DEBUG 21777[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=15, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,448]DEBUG 21777[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=16, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,448]DEBUG 21777[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,448]DEBUG 21777[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2020-04-01 10:13:00,449]DEBUG 21778[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,450]DEBUG 21779[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@1817d8b6 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@51e8bbb4, testMethod = testGetPlatinumTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2020-04-01 10:13:00,450]DEBUG 21779[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2020-04-01 10:13:00,450]DEBUG 21779[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@3c7ec4e2]
[2020-04-01 10:13:00,450]DEBUG 21779[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2020-04-01 10:13:00,452]DEBUG 21781[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2020-04-01 10:13:00,453]DEBUG 21782[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2020-04-01 10:13:00,453]DEBUG 21782[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@3c7ec4e2] after transaction
[2020-04-01 10:13:00,453]DEBUG 21782[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2020-04-01 10:13:00,454]DEBUG 21783[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2020-04-01 10:13:00,454]DEBUG 21783[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2020-04-01 10:13:00,454] INFO 21783[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@1817d8b6 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@51e8bbb4, testMethod = testGetPlatinumTypeDiscount@CustomerTypeDaoTest, testException = [null]]]
[2020-04-01 10:13:00,455]DEBUG 21784[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@1817d8b6 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@51e8bbb4, testMethod = testGetPlatinumTypeDiscount@CustomerTypeDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2020-04-01 10:13:00,455]DEBUG 21784[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2020-04-01 10:13:00,456]DEBUG 21785[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2020-04-01 10:13:00,456]DEBUG 21785[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@1817d8b6 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@40cc6052, testMethod = [null], testException = [null]]].
[2020-04-01 10:13:00,456]DEBUG 21785[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2020-04-01 10:13:00,457]DEBUG 21786[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2020-04-01 10:13:00,457]DEBUG 21786[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2020-04-01 10:13:00,457]DEBUG 21786[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2020-04-01 10:13:00,457]DEBUG 21786[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2020-04-01 10:13:00,458]DEBUG 21787[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2020-04-01 10:13:00,458]DEBUG 21787[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2020-04-01 10:13:00,458]DEBUG 21787[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2020-04-01 10:13:00,458]DEBUG 21787[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2020-04-01 10:13:00,458]DEBUG 21787[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2020-04-01 10:13:00,459]DEBUG 21788[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2020-04-01 10:13:00,459]DEBUG 21788[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2020-04-01 10:13:00,459]DEBUG 21788[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2020-04-01 10:13:00,459]DEBUG 21788[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2020-04-01 10:13:00,460]DEBUG 21789[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2020-04-01 10:13:00,460]DEBUG 21789[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2020-04-01 10:13:00,460]DEBUG 21789[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2020-04-01 10:13:00,460]DEBUG 21789[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2020-04-01 10:13:00,461]DEBUG 21790[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2020-04-01 10:13:00,461]DEBUG 21790[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2020-04-01 10:13:00,461]DEBUG 21790[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2020-04-01 10:13:00,462]DEBUG 21791[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' with 0 common interceptors and 1 specific interceptors
[2020-04-01 10:13:00,462]DEBUG 21791[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@40cc6052]
[2020-04-01 10:13:00,463]DEBUG 21792[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindAll' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2020-04-01 10:13:00,463]DEBUG 21792[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@1817d8b6 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@40cc6052, testMethod = testFindAll@CustomerTypeDaoTest, testException = [null]]]
[2020-04-01 10:13:00,463]DEBUG 21792[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2020-04-01 10:13:00,464]DEBUG 21793[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2020-04-01 10:13:00,464]DEBUG 21793[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15857251804
[2020-04-01 10:13:00,465]DEBUG 21794[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@7d5c5795] for Hibernate transaction
[2020-04-01 10:13:00,465]DEBUG 21794[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7d5c5795]
[2020-04-01 10:13:00,465]DEBUG 21794[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2020-04-01 10:13:00,465]DEBUG 21794[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2020-04-01 10:13:00,466]DEBUG 21795[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2020-04-01 10:13:00,466]DEBUG 21795[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@1817d8b6 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@40cc6052, testMethod = testFindAll@CustomerTypeDaoTest, testException = [null]]]
[2020-04-01 10:13:00,466] INFO 21795[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (5): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@ea6e1ae]; rollback [true]
[2020-04-01 10:13:00,466]DEBUG 21795[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2020-04-01 10:13:00,467]DEBUG 21796[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,467]DEBUG 21796[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2020-04-01 10:13:00,468]DEBUG 21797[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 17
[2020-04-01 10:13:00,469]DEBUG 21798[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,469]DEBUG 21798[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2020-04-01 10:13:00,470]DEBUG 21799[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,470]DEBUG 21799[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2020-04-01 10:13:00,471]DEBUG 21800[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 18
[2020-04-01 10:13:00,471]DEBUG 21800[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,472]DEBUG 21801[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2020-04-01 10:13:00,472]DEBUG 21801[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,473]DEBUG 21802[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2020-04-01 10:13:00,474]DEBUG 21803[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 19
[2020-04-01 10:13:00,474]DEBUG 21803[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,475]DEBUG 21804[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2020-04-01 10:13:00,475]DEBUG 21804[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,475]DEBUG 21804[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2020-04-01 10:13:00,477]DEBUG 21806[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 20
[2020-04-01 10:13:00,477]DEBUG 21806[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,478]DEBUG 21807[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,478]DEBUG 21807[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,478]DEBUG 21807[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,479]DEBUG 21808[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,479]DEBUG 21808[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,479]DEBUG 21808[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=20, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,480]DEBUG 21809[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=17, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,480]DEBUG 21809[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=19, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,480]DEBUG 21809[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=18, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,480]DEBUG 21809[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,481]DEBUG 21810[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID2_0_, this_.Discount as Discount2_0_, this_.MaxRange as MaxRange2_0_, this_.MinRange as MinRange2_0_, this_.TypeName as TypeName2_0_ from CustomerTypes this_
[2020-04-01 10:13:00,482]DEBUG 21811[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2020-04-01 10:13:00,482]DEBUG 21811[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#17]
[2020-04-01 10:13:00,483]DEBUG 21812[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#18]
[2020-04-01 10:13:00,483]DEBUG 21812[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#19]
[2020-04-01 10:13:00,483]DEBUG 21812[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#20]
[2020-04-01 10:13:00,484]DEBUG 21813[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2020-04-01 10:13:00,484]DEBUG 21813[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,484]DEBUG 21813[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2020-04-01 10:13:00,485]DEBUG 21814[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,485]DEBUG 21814[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,485]DEBUG 21814[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,486]DEBUG 21815[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,486]DEBUG 21815[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,486]DEBUG 21815[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=20, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,486]DEBUG 21815[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=17, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,487]DEBUG 21816[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=19, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,487]DEBUG 21816[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=18, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,487]DEBUG 21816[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,487]DEBUG 21816[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2020-04-01 10:13:00,488]DEBUG 21817[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,489]DEBUG 21818[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,489]DEBUG 21818[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,489]DEBUG 21818[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,490]DEBUG 21819[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,490]DEBUG 21819[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,490]DEBUG 21819[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=20, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,490]DEBUG 21819[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=17, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,491]DEBUG 21820[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=19, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,491]DEBUG 21820[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=18, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,491]DEBUG 21820[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,491]DEBUG 21820[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2020-04-01 10:13:00,492]DEBUG 21821[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,493]DEBUG 21822[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,493]DEBUG 21822[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,493]DEBUG 21822[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,493]DEBUG 21822[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,494]DEBUG 21823[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,494]DEBUG 21823[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=20, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,494]DEBUG 21823[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=17, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,495]DEBUG 21824[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=19, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,495]DEBUG 21824[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=18, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,495]DEBUG 21824[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,495]DEBUG 21824[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2020-04-01 10:13:00,496]DEBUG 21825[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,497]DEBUG 21826[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,497]DEBUG 21826[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,497]DEBUG 21826[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,497]DEBUG 21826[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,498]DEBUG 21827[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,498]DEBUG 21827[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=20, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,498]DEBUG 21827[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=17, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,498]DEBUG 21827[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=19, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,499]DEBUG 21828[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=18, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,499]DEBUG 21828[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,499]DEBUG 21828[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2020-04-01 10:13:00,500]DEBUG 21829[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,501]DEBUG 21830[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,501]DEBUG 21830[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,501]DEBUG 21830[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,501]DEBUG 21830[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,502]DEBUG 21831[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,502]DEBUG 21831[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=20, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,502]DEBUG 21831[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=17, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,503]DEBUG 21832[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=19, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,503]DEBUG 21832[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=18, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,503]DEBUG 21832[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,504]DEBUG 21833[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2020-04-01 10:13:00,504]DEBUG 21833[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,505]DEBUG 21834[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,505]DEBUG 21834[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,506]DEBUG 21835[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,506]DEBUG 21835[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,506]DEBUG 21835[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,506]DEBUG 21835[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=20, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,507]DEBUG 21836[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=17, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,507]DEBUG 21836[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=19, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,507]DEBUG 21836[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=18, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,508]DEBUG 21837[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,508]DEBUG 21837[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2020-04-01 10:13:00,509]DEBUG 21838[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,509]DEBUG 21838[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,510]DEBUG 21839[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,510]DEBUG 21839[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,510]DEBUG 21839[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,511]DEBUG 21840[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,511]DEBUG 21840[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=20, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,511]DEBUG 21840[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=17, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,511]DEBUG 21840[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=19, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,512]DEBUG 21841[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=18, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,512]DEBUG 21841[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,512]DEBUG 21841[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2020-04-01 10:13:00,513]DEBUG 21842[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,514]DEBUG 21843[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,514]DEBUG 21843[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,514]DEBUG 21843[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,515]DEBUG 21844[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,515]DEBUG 21844[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,515]DEBUG 21844[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=20, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,516]DEBUG 21845[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=17, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,516]DEBUG 21845[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=19, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,517]DEBUG 21846[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=18, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,517]DEBUG 21846[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,517]DEBUG 21846[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2020-04-01 10:13:00,518]DEBUG 21847[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,519]DEBUG 21848[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,519]DEBUG 21848[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,519]DEBUG 21848[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,520]DEBUG 21849[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,520]DEBUG 21849[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,520]DEBUG 21849[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=20, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,520]DEBUG 21849[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=17, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,521]DEBUG 21850[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=19, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,521]DEBUG 21850[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=18, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,521]DEBUG 21850[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,521]DEBUG 21850[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2020-04-01 10:13:00,522]DEBUG 21851[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,523]DEBUG 21852[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@1817d8b6 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@40cc6052, testMethod = testFindAll@CustomerTypeDaoTest, testException = [null]]]
[2020-04-01 10:13:00,523]DEBUG 21852[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2020-04-01 10:13:00,523]DEBUG 21852[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7d5c5795]
[2020-04-01 10:13:00,523]DEBUG 21852[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2020-04-01 10:13:00,525]DEBUG 21854[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2020-04-01 10:13:00,526]DEBUG 21855[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2020-04-01 10:13:00,526]DEBUG 21855[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@7d5c5795] after transaction
[2020-04-01 10:13:00,526]DEBUG 21855[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2020-04-01 10:13:00,527]DEBUG 21856[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2020-04-01 10:13:00,527]DEBUG 21856[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2020-04-01 10:13:00,527] INFO 21856[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@1817d8b6 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@40cc6052, testMethod = testFindAll@CustomerTypeDaoTest, testException = [null]]]
[2020-04-01 10:13:00,528]DEBUG 21857[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@1817d8b6 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@40cc6052, testMethod = testFindAll@CustomerTypeDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2020-04-01 10:13:00,528]DEBUG 21857[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2020-04-01 10:13:00,529]DEBUG 21858[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2020-04-01 10:13:00,529]DEBUG 21858[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@1817d8b6 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@72d0d512, testMethod = [null], testException = [null]]].
[2020-04-01 10:13:00,529]DEBUG 21858[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2020-04-01 10:13:00,530]DEBUG 21859[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2020-04-01 10:13:00,530]DEBUG 21859[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2020-04-01 10:13:00,530]DEBUG 21859[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2020-04-01 10:13:00,530]DEBUG 21859[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2020-04-01 10:13:00,531]DEBUG 21860[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2020-04-01 10:13:00,531]DEBUG 21860[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2020-04-01 10:13:00,531]DEBUG 21860[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2020-04-01 10:13:00,531]DEBUG 21860[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2020-04-01 10:13:00,531]DEBUG 21860[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2020-04-01 10:13:00,532]DEBUG 21861[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2020-04-01 10:13:00,532]DEBUG 21861[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2020-04-01 10:13:00,532]DEBUG 21861[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2020-04-01 10:13:00,532]DEBUG 21861[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2020-04-01 10:13:00,533]DEBUG 21862[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2020-04-01 10:13:00,533]DEBUG 21862[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2020-04-01 10:13:00,533]DEBUG 21862[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2020-04-01 10:13:00,533]DEBUG 21862[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2020-04-01 10:13:00,534]DEBUG 21863[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2020-04-01 10:13:00,534]DEBUG 21863[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2020-04-01 10:13:00,534]DEBUG 21863[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2020-04-01 10:13:00,534]DEBUG 21863[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' with 0 common interceptors and 1 specific interceptors
[2020-04-01 10:13:00,535]DEBUG 21864[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@72d0d512]
[2020-04-01 10:13:00,535]DEBUG 21864[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByCriterions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2020-04-01 10:13:00,536]DEBUG 21865[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@1817d8b6 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@72d0d512, testMethod = testFindByCriterions@CustomerTypeDaoTest, testException = [null]]]
[2020-04-01 10:13:00,536]DEBUG 21865[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2020-04-01 10:13:00,537]DEBUG 21866[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByCriterions]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2020-04-01 10:13:00,537]DEBUG 21866[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15857251805
[2020-04-01 10:13:00,537]DEBUG 21866[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@74e94814] for Hibernate transaction
[2020-04-01 10:13:00,537]DEBUG 21866[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@74e94814]
[2020-04-01 10:13:00,538]DEBUG 21867[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2020-04-01 10:13:00,538]DEBUG 21867[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2020-04-01 10:13:00,538]DEBUG 21867[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2020-04-01 10:13:00,538]DEBUG 21867[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@1817d8b6 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@72d0d512, testMethod = testFindByCriterions@CustomerTypeDaoTest, testException = [null]]]
[2020-04-01 10:13:00,539] INFO 21868[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (6): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@ea6e1ae]; rollback [true]
[2020-04-01 10:13:00,539]DEBUG 21868[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2020-04-01 10:13:00,540]DEBUG 21869[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,540]DEBUG 21869[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2020-04-01 10:13:00,541]DEBUG 21870[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 21
[2020-04-01 10:13:00,541]DEBUG 21870[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,542]DEBUG 21871[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2020-04-01 10:13:00,542]DEBUG 21871[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,543]DEBUG 21872[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2020-04-01 10:13:00,544]DEBUG 21873[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 22
[2020-04-01 10:13:00,544]DEBUG 21873[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,545]DEBUG 21874[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2020-04-01 10:13:00,545]DEBUG 21874[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,545]DEBUG 21874[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2020-04-01 10:13:00,546]DEBUG 21875[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 23
[2020-04-01 10:13:00,547]DEBUG 21876[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,547]DEBUG 21876[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2020-04-01 10:13:00,548]DEBUG 21877[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,548]DEBUG 21877[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2020-04-01 10:13:00,549]DEBUG 21878[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 24
[2020-04-01 10:13:00,550]DEBUG 21879[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,551]DEBUG 21880[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,551]DEBUG 21880[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,551]DEBUG 21880[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,552]DEBUG 21881[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,552]DEBUG 21881[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,552]DEBUG 21881[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=24, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,553]DEBUG 21882[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=23, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,553]DEBUG 21882[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=22, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,553]DEBUG 21882[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=21, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,554]DEBUG 21883[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,554]DEBUG 21883[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID2_0_, this_.Discount as Discount2_0_, this_.MaxRange as MaxRange2_0_, this_.MinRange as MinRange2_0_, this_.TypeName as TypeName2_0_ from CustomerTypes this_ where this_.TypeName=? and this_.ID<=?
[2020-04-01 10:13:00,555]DEBUG 21884[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2020-04-01 10:13:00,556]DEBUG 21885[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#21]
[2020-04-01 10:13:00,556]DEBUG 21885[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2020-04-01 10:13:00,556]DEBUG 21885[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,556]DEBUG 21885[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2020-04-01 10:13:00,557]DEBUG 21886[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,557]DEBUG 21886[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,558]DEBUG 21887[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,558]DEBUG 21887[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,558]DEBUG 21887[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,559]DEBUG 21888[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=24, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,559]DEBUG 21888[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=23, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,559]DEBUG 21888[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=22, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,560]DEBUG 21889[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=21, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,560]DEBUG 21889[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,560]DEBUG 21889[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2020-04-01 10:13:00,561]DEBUG 21890[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,561]DEBUG 21890[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,562]DEBUG 21891[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,562]DEBUG 21891[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,562]DEBUG 21891[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,563]DEBUG 21892[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,563]DEBUG 21892[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=24, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,563]DEBUG 21892[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=23, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,563]DEBUG 21892[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=22, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,564]DEBUG 21893[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=21, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,564]DEBUG 21893[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,564]DEBUG 21893[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2020-04-01 10:13:00,565]DEBUG 21894[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,565]DEBUG 21894[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,566]DEBUG 21895[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,566]DEBUG 21895[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,566]DEBUG 21895[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,567]DEBUG 21896[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,567]DEBUG 21896[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=24, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,567]DEBUG 21896[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=23, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,567]DEBUG 21896[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=22, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,568]DEBUG 21897[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=21, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,568]DEBUG 21897[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,568]DEBUG 21897[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2020-04-01 10:13:00,569]DEBUG 21898[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,569]DEBUG 21898[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,570]DEBUG 21899[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,570]DEBUG 21899[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,570]DEBUG 21899[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,570]DEBUG 21899[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,571]DEBUG 21900[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=24, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,571]DEBUG 21900[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=23, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,571]DEBUG 21900[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=22, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,572]DEBUG 21901[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=21, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,572]DEBUG 21901[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,572]DEBUG 21901[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2020-04-01 10:13:00,573]DEBUG 21902[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,573]DEBUG 21902[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,574]DEBUG 21903[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,574]DEBUG 21903[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,574]DEBUG 21903[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,574]DEBUG 21903[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,575]DEBUG 21904[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=24, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,575]DEBUG 21904[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=23, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,575]DEBUG 21904[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=22, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,575]DEBUG 21904[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=21, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,576]DEBUG 21905[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,576]DEBUG 21905[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2020-04-01 10:13:00,577]DEBUG 21906[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,577]DEBUG 21906[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,577]DEBUG 21906[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,578]DEBUG 21907[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,578]DEBUG 21907[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,578]DEBUG 21907[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,579]DEBUG 21908[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=24, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,579]DEBUG 21908[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=23, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,579]DEBUG 21908[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=22, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,579]DEBUG 21908[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=21, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,580]DEBUG 21909[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,580]DEBUG 21909[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2020-04-01 10:13:00,581]DEBUG 21910[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,581]DEBUG 21910[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,581]DEBUG 21910[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,582]DEBUG 21911[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,582]DEBUG 21911[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,582]DEBUG 21911[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,583]DEBUG 21912[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=24, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,583]DEBUG 21912[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=23, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,583]DEBUG 21912[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=22, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,583]DEBUG 21912[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=21, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,584]DEBUG 21913[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,584]DEBUG 21913[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2020-04-01 10:13:00,585]DEBUG 21914[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,585]DEBUG 21914[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,586]DEBUG 21915[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,586]DEBUG 21915[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,586]DEBUG 21915[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,587]DEBUG 21916[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,587]DEBUG 21916[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=24, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,587]DEBUG 21916[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=23, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,587]DEBUG 21916[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=22, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,588]DEBUG 21917[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=21, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,588]DEBUG 21917[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,588]DEBUG 21917[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2020-04-01 10:13:00,589]DEBUG 21918[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,589]DEBUG 21918[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,590]DEBUG 21919[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,590]DEBUG 21919[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,590]DEBUG 21919[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,590]DEBUG 21919[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,591]DEBUG 21920[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=24, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,591]DEBUG 21920[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=23, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,591]DEBUG 21920[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=22, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,592]DEBUG 21921[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=21, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,592]DEBUG 21921[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,592]DEBUG 21921[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2020-04-01 10:13:00,593]DEBUG 21922[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,594]DEBUG 21923[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@1817d8b6 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@72d0d512, testMethod = testFindByCriterions@CustomerTypeDaoTest, testException = [null]]]
[2020-04-01 10:13:00,594]DEBUG 21923[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2020-04-01 10:13:00,594]DEBUG 21923[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@74e94814]
[2020-04-01 10:13:00,594]DEBUG 21923[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2020-04-01 10:13:00,597]DEBUG 21926[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2020-04-01 10:13:00,597]DEBUG 21926[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2020-04-01 10:13:00,597]DEBUG 21926[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@74e94814] after transaction
[2020-04-01 10:13:00,597]DEBUG 21926[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2020-04-01 10:13:00,598]DEBUG 21927[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2020-04-01 10:13:00,598]DEBUG 21927[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2020-04-01 10:13:00,598] INFO 21927[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@1817d8b6 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@72d0d512, testMethod = testFindByCriterions@CustomerTypeDaoTest, testException = [null]]]
[2020-04-01 10:13:00,599]DEBUG 21928[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@1817d8b6 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@72d0d512, testMethod = testFindByCriterions@CustomerTypeDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2020-04-01 10:13:00,599]DEBUG 21928[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2020-04-01 10:13:00,600]DEBUG 21929[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2020-04-01 10:13:00,600]DEBUG 21929[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@1817d8b6 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@6270a4a9, testMethod = [null], testException = [null]]].
[2020-04-01 10:13:00,600]DEBUG 21929[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2020-04-01 10:13:00,601]DEBUG 21930[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2020-04-01 10:13:00,601]DEBUG 21930[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2020-04-01 10:13:00,601]DEBUG 21930[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2020-04-01 10:13:00,601]DEBUG 21930[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2020-04-01 10:13:00,601]DEBUG 21930[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2020-04-01 10:13:00,602]DEBUG 21931[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2020-04-01 10:13:00,602]DEBUG 21931[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2020-04-01 10:13:00,602]DEBUG 21931[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2020-04-01 10:13:00,602]DEBUG 21931[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2020-04-01 10:13:00,603]DEBUG 21932[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2020-04-01 10:13:00,603]DEBUG 21932[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2020-04-01 10:13:00,603]DEBUG 21932[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2020-04-01 10:13:00,604]DEBUG 21933[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2020-04-01 10:13:00,604]DEBUG 21933[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2020-04-01 10:13:00,604]DEBUG 21933[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2020-04-01 10:13:00,604]DEBUG 21933[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2020-04-01 10:13:00,605]DEBUG 21934[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2020-04-01 10:13:00,605]DEBUG 21934[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2020-04-01 10:13:00,605]DEBUG 21934[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2020-04-01 10:13:00,605]DEBUG 21934[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2020-04-01 10:13:00,606]DEBUG 21935[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' with 0 common interceptors and 1 specific interceptors
[2020-04-01 10:13:00,606]DEBUG 21935[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@6270a4a9]
[2020-04-01 10:13:00,607]DEBUG 21936[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByOneOfCriterions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2020-04-01 10:13:00,607]DEBUG 21936[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@1817d8b6 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@6270a4a9, testMethod = testFindByOneOfCriterions@CustomerTypeDaoTest, testException = [null]]]
[2020-04-01 10:13:00,607]DEBUG 21936[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2020-04-01 10:13:00,608]DEBUG 21937[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByOneOfCriterions]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2020-04-01 10:13:00,608]DEBUG 21937[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15857251806
[2020-04-01 10:13:00,608]DEBUG 21937[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@4f0e18a3] for Hibernate transaction
[2020-04-01 10:13:00,609]DEBUG 21938[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@4f0e18a3]
[2020-04-01 10:13:00,609]DEBUG 21938[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2020-04-01 10:13:00,609]DEBUG 21938[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2020-04-01 10:13:00,609]DEBUG 21938[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2020-04-01 10:13:00,610]DEBUG 21939[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@1817d8b6 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@6270a4a9, testMethod = testFindByOneOfCriterions@CustomerTypeDaoTest, testException = [null]]]
[2020-04-01 10:13:00,610] INFO 21939[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (7): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@ea6e1ae]; rollback [true]
[2020-04-01 10:13:00,610]DEBUG 21939[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2020-04-01 10:13:00,610]DEBUG 21939[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,611]DEBUG 21940[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2020-04-01 10:13:00,612]DEBUG 21941[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 25
[2020-04-01 10:13:00,612]DEBUG 21941[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,613]DEBUG 21942[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2020-04-01 10:13:00,613]DEBUG 21942[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,614]DEBUG 21943[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2020-04-01 10:13:00,615]DEBUG 21944[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 26
[2020-04-01 10:13:00,615]DEBUG 21944[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,616]DEBUG 21945[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2020-04-01 10:13:00,616]DEBUG 21945[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,617]DEBUG 21946[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2020-04-01 10:13:00,618]DEBUG 21947[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 27
[2020-04-01 10:13:00,618]DEBUG 21947[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,619]DEBUG 21948[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2020-04-01 10:13:00,619]DEBUG 21948[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,619]DEBUG 21948[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2020-04-01 10:13:00,620]DEBUG 21949[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 28
[2020-04-01 10:13:00,621]DEBUG 21950[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,622]DEBUG 21951[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,622]DEBUG 21951[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,622]DEBUG 21951[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,623]DEBUG 21952[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,623]DEBUG 21952[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,623]DEBUG 21952[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=26, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,623]DEBUG 21952[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=25, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,624]DEBUG 21953[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=28, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,624]DEBUG 21953[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=27, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,624]DEBUG 21953[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,625]DEBUG 21954[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID2_0_, this_.Discount as Discount2_0_, this_.MaxRange as MaxRange2_0_, this_.MinRange as MinRange2_0_, this_.TypeName as TypeName2_0_ from CustomerTypes this_ where this_.TypeName=? and this_.ID<=?
[2020-04-01 10:13:00,626]DEBUG 21955[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2020-04-01 10:13:00,627]DEBUG 21956[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#25]
[2020-04-01 10:13:00,627]DEBUG 21956[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2020-04-01 10:13:00,627]DEBUG 21956[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,627]DEBUG 21956[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2020-04-01 10:13:00,628]DEBUG 21957[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,628]DEBUG 21957[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,628]DEBUG 21957[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,629]DEBUG 21958[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,629]DEBUG 21958[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,629]DEBUG 21958[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=26, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,629]DEBUG 21958[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=25, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,630]DEBUG 21959[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=28, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,630]DEBUG 21959[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=27, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,630]DEBUG 21959[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,630]DEBUG 21959[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2020-04-01 10:13:00,631]DEBUG 21960[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,632]DEBUG 21961[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,632]DEBUG 21961[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,632]DEBUG 21961[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,633]DEBUG 21962[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,633]DEBUG 21962[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,633]DEBUG 21962[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=26, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,633]DEBUG 21962[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=25, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,634]DEBUG 21963[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=28, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,634]DEBUG 21963[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=27, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,634]DEBUG 21963[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,634]DEBUG 21963[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2020-04-01 10:13:00,635]DEBUG 21964[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,636]DEBUG 21965[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,636]DEBUG 21965[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,636]DEBUG 21965[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,637]DEBUG 21966[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,637]DEBUG 21966[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,637]DEBUG 21966[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=26, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,637]DEBUG 21966[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=25, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,638]DEBUG 21967[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=28, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,638]DEBUG 21967[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=27, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,638]DEBUG 21967[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,639]DEBUG 21968[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2020-04-01 10:13:00,639]DEBUG 21968[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,640]DEBUG 21969[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,640]DEBUG 21969[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,640]DEBUG 21969[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,641]DEBUG 21970[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,641]DEBUG 21970[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,641]DEBUG 21970[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=26, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,641]DEBUG 21970[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=25, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,642]DEBUG 21971[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=28, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,642]DEBUG 21971[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=27, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,642]DEBUG 21971[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,642]DEBUG 21971[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2020-04-01 10:13:00,643]DEBUG 21972[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,644]DEBUG 21973[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,644]DEBUG 21973[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,644]DEBUG 21973[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,645]DEBUG 21974[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,645]DEBUG 21974[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,645]DEBUG 21974[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=26, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,646]DEBUG 21975[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=25, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,646]DEBUG 21975[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=28, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,646]DEBUG 21975[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=27, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,646]DEBUG 21975[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,647]DEBUG 21976[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2020-04-01 10:13:00,647]DEBUG 21976[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,648]DEBUG 21977[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,648]DEBUG 21977[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,649]DEBUG 21978[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,649]DEBUG 21978[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,649]DEBUG 21978[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,649]DEBUG 21978[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=26, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,650]DEBUG 21979[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=25, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,650]DEBUG 21979[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=28, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,650]DEBUG 21979[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=27, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,650]DEBUG 21979[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,651]DEBUG 21980[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2020-04-01 10:13:00,651]DEBUG 21980[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,652]DEBUG 21981[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,652]DEBUG 21981[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,653]DEBUG 21982[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,653]DEBUG 21982[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,653]DEBUG 21982[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,653]DEBUG 21982[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=26, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,654]DEBUG 21983[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=25, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,654]DEBUG 21983[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=28, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,654]DEBUG 21983[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=27, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,654]DEBUG 21983[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,655]DEBUG 21984[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2020-04-01 10:13:00,655]DEBUG 21984[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,656]DEBUG 21985[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,656]DEBUG 21985[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,657]DEBUG 21986[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,657]DEBUG 21986[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,657]DEBUG 21986[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,657]DEBUG 21986[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=26, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,658]DEBUG 21987[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=25, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,658]DEBUG 21987[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=28, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,658]DEBUG 21987[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=27, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,659]DEBUG 21988[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,659]DEBUG 21988[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2020-04-01 10:13:00,660]DEBUG 21989[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,660]DEBUG 21989[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,661]DEBUG 21990[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,661]DEBUG 21990[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,662]DEBUG 21991[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,662]DEBUG 21991[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,662]DEBUG 21991[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=26, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,663]DEBUG 21992[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=25, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,663]DEBUG 21992[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=28, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,663]DEBUG 21992[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=27, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,663]DEBUG 21992[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,664]DEBUG 21993[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2020-04-01 10:13:00,665]DEBUG 21994[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,665]DEBUG 21994[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@1817d8b6 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@6270a4a9, testMethod = testFindByOneOfCriterions@CustomerTypeDaoTest, testException = [null]]]
[2020-04-01 10:13:00,665]DEBUG 21994[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2020-04-01 10:13:00,666]DEBUG 21995[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@4f0e18a3]
[2020-04-01 10:13:00,666]DEBUG 21995[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2020-04-01 10:13:00,668]DEBUG 21997[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2020-04-01 10:13:00,668]DEBUG 21997[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2020-04-01 10:13:00,668]DEBUG 21997[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@4f0e18a3] after transaction
[2020-04-01 10:13:00,669]DEBUG 21998[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2020-04-01 10:13:00,669]DEBUG 21998[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2020-04-01 10:13:00,669]DEBUG 21998[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2020-04-01 10:13:00,669] INFO 21998[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@1817d8b6 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@6270a4a9, testMethod = testFindByOneOfCriterions@CustomerTypeDaoTest, testException = [null]]]
[2020-04-01 10:13:00,670]DEBUG 21999[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@1817d8b6 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@6270a4a9, testMethod = testFindByOneOfCriterions@CustomerTypeDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2020-04-01 10:13:00,671]DEBUG 22000[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2020-04-01 10:13:00,671]DEBUG 22000[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2020-04-01 10:13:00,672]DEBUG 22001[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@1817d8b6 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@5e92c29d, testMethod = [null], testException = [null]]].
[2020-04-01 10:13:00,672]DEBUG 22001[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2020-04-01 10:13:00,673]DEBUG 22002[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2020-04-01 10:13:00,673]DEBUG 22002[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2020-04-01 10:13:00,673]DEBUG 22002[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2020-04-01 10:13:00,673]DEBUG 22002[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2020-04-01 10:13:00,674]DEBUG 22003[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2020-04-01 10:13:00,674]DEBUG 22003[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2020-04-01 10:13:00,674]DEBUG 22003[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2020-04-01 10:13:00,674]DEBUG 22003[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2020-04-01 10:13:00,674]DEBUG 22003[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2020-04-01 10:13:00,675]DEBUG 22004[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2020-04-01 10:13:00,675]DEBUG 22004[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2020-04-01 10:13:00,675]DEBUG 22004[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2020-04-01 10:13:00,675]DEBUG 22004[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2020-04-01 10:13:00,676]DEBUG 22005[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2020-04-01 10:13:00,676]DEBUG 22005[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2020-04-01 10:13:00,676]DEBUG 22005[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2020-04-01 10:13:00,676]DEBUG 22005[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2020-04-01 10:13:00,677]DEBUG 22006[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2020-04-01 10:13:00,677]DEBUG 22006[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2020-04-01 10:13:00,677]DEBUG 22006[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2020-04-01 10:13:00,678]DEBUG 22007[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' with 0 common interceptors and 1 specific interceptors
[2020-04-01 10:13:00,678]DEBUG 22007[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@5e92c29d]
[2020-04-01 10:13:00,679]DEBUG 22008[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByID' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2020-04-01 10:13:00,679]DEBUG 22008[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@1817d8b6 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@5e92c29d, testMethod = testFindByID@CustomerTypeDaoTest, testException = [null]]]
[2020-04-01 10:13:00,680]DEBUG 22009[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2020-04-01 10:13:00,680]DEBUG 22009[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByID]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2020-04-01 10:13:00,681]DEBUG 22010[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15857251806
[2020-04-01 10:13:00,681]DEBUG 22010[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@15b81ee6] for Hibernate transaction
[2020-04-01 10:13:00,681]DEBUG 22010[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@15b81ee6]
[2020-04-01 10:13:00,681]DEBUG 22010[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2020-04-01 10:13:00,682]DEBUG 22011[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2020-04-01 10:13:00,682]DEBUG 22011[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2020-04-01 10:13:00,682]DEBUG 22011[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@1817d8b6 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@5e92c29d, testMethod = testFindByID@CustomerTypeDaoTest, testException = [null]]]
[2020-04-01 10:13:00,682] INFO 22011[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (8): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@ea6e1ae]; rollback [true]
[2020-04-01 10:13:00,683]DEBUG 22012[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2020-04-01 10:13:00,683]DEBUG 22012[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,683]DEBUG 22012[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2020-04-01 10:13:00,685]DEBUG 22014[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 29
[2020-04-01 10:13:00,685]DEBUG 22014[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,685]DEBUG 22014[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2020-04-01 10:13:00,686]DEBUG 22015[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,686]DEBUG 22015[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2020-04-01 10:13:00,687]DEBUG 22016[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 30
[2020-04-01 10:13:00,688]DEBUG 22017[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,688]DEBUG 22017[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2020-04-01 10:13:00,689]DEBUG 22018[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,689]DEBUG 22018[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2020-04-01 10:13:00,690]DEBUG 22019[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 31
[2020-04-01 10:13:00,691]DEBUG 22020[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,691]DEBUG 22020[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2020-04-01 10:13:00,691]DEBUG 22020[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,692]DEBUG 22021[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2020-04-01 10:13:00,693]DEBUG 22022[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 32
[2020-04-01 10:13:00,693]DEBUG 22022[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,694]DEBUG 22023[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,694]DEBUG 22023[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,695]DEBUG 22024[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,695]DEBUG 22024[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,695]DEBUG 22024[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,695]DEBUG 22024[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=32, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,696]DEBUG 22025[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=31, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,696]DEBUG 22025[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=30, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,696]DEBUG 22025[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=29, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,697]DEBUG 22026[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,697]DEBUG 22026[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select customerty0_.ID as ID2_, customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_ from CustomerTypes customerty0_ where customerty0_.TypeName=?
[2020-04-01 10:13:00,698]DEBUG 22027[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2020-04-01 10:13:00,699]DEBUG 22028[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#29]
[2020-04-01 10:13:00,699]DEBUG 22028[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2020-04-01 10:13:00,699]DEBUG 22028[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,700]DEBUG 22029[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2020-04-01 10:13:00,700]DEBUG 22029[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,700]DEBUG 22029[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,701]DEBUG 22030[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,701]DEBUG 22030[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,701]DEBUG 22030[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,702]DEBUG 22031[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=32, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,702]DEBUG 22031[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=31, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,702]DEBUG 22031[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=30, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,702]DEBUG 22031[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=29, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,703]DEBUG 22032[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,703]DEBUG 22032[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2020-04-01 10:13:00,704]DEBUG 22033[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,704]DEBUG 22033[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,705]DEBUG 22034[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,705]DEBUG 22034[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,705]DEBUG 22034[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,705]DEBUG 22034[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,706]DEBUG 22035[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=32, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,706]DEBUG 22035[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=31, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,706]DEBUG 22035[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=30, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,706]DEBUG 22035[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=29, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,707]DEBUG 22036[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,707]DEBUG 22036[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2020-04-01 10:13:00,708]DEBUG 22037[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,708]DEBUG 22037[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,708]DEBUG 22037[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,709]DEBUG 22038[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,709]DEBUG 22038[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,709]DEBUG 22038[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,710]DEBUG 22039[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=32, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,710]DEBUG 22039[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=31, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,710]DEBUG 22039[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=30, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,710]DEBUG 22039[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=29, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,711]DEBUG 22040[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,711]DEBUG 22040[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2020-04-01 10:13:00,712]DEBUG 22041[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,712]DEBUG 22041[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,713]DEBUG 22042[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,713]DEBUG 22042[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,713]DEBUG 22042[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,713]DEBUG 22042[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,714]DEBUG 22043[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=32, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,714]DEBUG 22043[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=31, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,714]DEBUG 22043[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=30, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,714]DEBUG 22043[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=29, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,715]DEBUG 22044[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,715]DEBUG 22044[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2020-04-01 10:13:00,716]DEBUG 22045[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,716]DEBUG 22045[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,716]DEBUG 22045[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,717]DEBUG 22046[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,717]DEBUG 22046[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,717]DEBUG 22046[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,718]DEBUG 22047[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=32, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,718]DEBUG 22047[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=31, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,718]DEBUG 22047[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=30, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,718]DEBUG 22047[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=29, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,719]DEBUG 22048[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,719]DEBUG 22048[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2020-04-01 10:13:00,720]DEBUG 22049[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,720]DEBUG 22049[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,721]DEBUG 22050[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,721]DEBUG 22050[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,721]DEBUG 22050[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,722]DEBUG 22051[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,722]DEBUG 22051[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=32, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,722]DEBUG 22051[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=31, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,722]DEBUG 22051[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=30, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,723]DEBUG 22052[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=29, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,723]DEBUG 22052[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,723]DEBUG 22052[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2020-04-01 10:13:00,724]DEBUG 22053[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,724]DEBUG 22053[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,725]DEBUG 22054[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,725]DEBUG 22054[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,725]DEBUG 22054[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,726]DEBUG 22055[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,726]DEBUG 22055[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=32, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,726]DEBUG 22055[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=31, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,726]DEBUG 22055[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=30, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,727]DEBUG 22056[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=29, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,727]DEBUG 22056[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,727]DEBUG 22056[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2020-04-01 10:13:00,728]DEBUG 22057[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,728]DEBUG 22057[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,729]DEBUG 22058[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,729]DEBUG 22058[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,729]DEBUG 22058[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,730]DEBUG 22059[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,730]DEBUG 22059[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=32, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,730]DEBUG 22059[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=31, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,730]DEBUG 22059[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=30, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,731]DEBUG 22060[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=29, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,731]DEBUG 22060[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,731]DEBUG 22060[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2020-04-01 10:13:00,732]DEBUG 22061[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,733]DEBUG 22062[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,733]DEBUG 22062[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,733]DEBUG 22062[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,733]DEBUG 22062[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,734]DEBUG 22063[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,734]DEBUG 22063[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=32, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,734]DEBUG 22063[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=31, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,734]DEBUG 22063[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=30, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,735]DEBUG 22064[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=29, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,735]DEBUG 22064[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,735]DEBUG 22064[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2020-04-01 10:13:00,736]DEBUG 22065[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,736]DEBUG 22065[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@1817d8b6 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@5e92c29d, testMethod = testFindByID@CustomerTypeDaoTest, testException = [null]]]
[2020-04-01 10:13:00,737]DEBUG 22066[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2020-04-01 10:13:00,737]DEBUG 22066[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@15b81ee6]
[2020-04-01 10:13:00,737]DEBUG 22066[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2020-04-01 10:13:00,739]DEBUG 22068[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2020-04-01 10:13:00,739]DEBUG 22068[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2020-04-01 10:13:00,740]DEBUG 22069[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@15b81ee6] after transaction
[2020-04-01 10:13:00,740]DEBUG 22069[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2020-04-01 10:13:00,740]DEBUG 22069[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2020-04-01 10:13:00,740]DEBUG 22069[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2020-04-01 10:13:00,741] INFO 22070[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@1817d8b6 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@5e92c29d, testMethod = testFindByID@CustomerTypeDaoTest, testException = [null]]]
[2020-04-01 10:13:00,742]DEBUG 22071[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@1817d8b6 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@5e92c29d, testMethod = testFindByID@CustomerTypeDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2020-04-01 10:13:00,742]DEBUG 22071[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2020-04-01 10:13:00,742]DEBUG 22071[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2020-04-01 10:13:00,743]DEBUG 22072[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@1817d8b6 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@3e600af8, testMethod = [null], testException = [null]]].
[2020-04-01 10:13:00,743]DEBUG 22072[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2020-04-01 10:13:00,743]DEBUG 22072[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2020-04-01 10:13:00,744]DEBUG 22073[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2020-04-01 10:13:00,744]DEBUG 22073[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2020-04-01 10:13:00,744]DEBUG 22073[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2020-04-01 10:13:00,744]DEBUG 22073[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2020-04-01 10:13:00,745]DEBUG 22074[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2020-04-01 10:13:00,745]DEBUG 22074[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2020-04-01 10:13:00,745]DEBUG 22074[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2020-04-01 10:13:00,745]DEBUG 22074[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2020-04-01 10:13:00,745]DEBUG 22074[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2020-04-01 10:13:00,746]DEBUG 22075[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2020-04-01 10:13:00,746]DEBUG 22075[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2020-04-01 10:13:00,746]DEBUG 22075[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2020-04-01 10:13:00,746]DEBUG 22075[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2020-04-01 10:13:00,747]DEBUG 22076[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2020-04-01 10:13:00,747]DEBUG 22076[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2020-04-01 10:13:00,747]DEBUG 22076[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2020-04-01 10:13:00,747]DEBUG 22076[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2020-04-01 10:13:00,747]DEBUG 22076[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2020-04-01 10:13:00,748]DEBUG 22077[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2020-04-01 10:13:00,748]DEBUG 22077[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' with 0 common interceptors and 1 specific interceptors
[2020-04-01 10:13:00,748]DEBUG 22077[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@3e600af8]
[2020-04-01 10:13:00,749]DEBUG 22078[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testInsertOrUpdate' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2020-04-01 10:13:00,749]DEBUG 22078[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@1817d8b6 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@3e600af8, testMethod = testInsertOrUpdate@CustomerTypeDaoTest, testException = [null]]]
[2020-04-01 10:13:00,750]DEBUG 22079[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2020-04-01 10:13:00,750]DEBUG 22079[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testInsertOrUpdate]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2020-04-01 10:13:00,751]DEBUG 22080[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15857251807
[2020-04-01 10:13:00,751]DEBUG 22080[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@174f78fa] for Hibernate transaction
[2020-04-01 10:13:00,751]DEBUG 22080[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@174f78fa]
[2020-04-01 10:13:00,751]DEBUG 22080[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2020-04-01 10:13:00,751]DEBUG 22080[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2020-04-01 10:13:00,752]DEBUG 22081[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2020-04-01 10:13:00,752]DEBUG 22081[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@1817d8b6 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@3e600af8, testMethod = testInsertOrUpdate@CustomerTypeDaoTest, testException = [null]]]
[2020-04-01 10:13:00,752] INFO 22081[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (9): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@ea6e1ae]; rollback [true]
[2020-04-01 10:13:00,753]DEBUG 22082[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2020-04-01 10:13:00,753]DEBUG 22082[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,754]DEBUG 22083[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2020-04-01 10:13:00,755]DEBUG 22084[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 33
[2020-04-01 10:13:00,755]DEBUG 22084[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,756]DEBUG 22085[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2020-04-01 10:13:00,756]DEBUG 22085[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,756]DEBUG 22085[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2020-04-01 10:13:00,757]DEBUG 22086[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 34
[2020-04-01 10:13:00,758]DEBUG 22087[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,758]DEBUG 22087[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2020-04-01 10:13:00,759]DEBUG 22088[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,759]DEBUG 22088[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2020-04-01 10:13:00,761]DEBUG 22090[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 35
[2020-04-01 10:13:00,761]DEBUG 22090[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,762]DEBUG 22091[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2020-04-01 10:13:00,762]DEBUG 22091[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,763]DEBUG 22092[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2020-04-01 10:13:00,764]DEBUG 22093[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 36
[2020-04-01 10:13:00,764]DEBUG 22093[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,765]DEBUG 22094[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,765]DEBUG 22094[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,766]DEBUG 22095[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,766]DEBUG 22095[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,766]DEBUG 22095[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,766]DEBUG 22095[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=34, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,767]DEBUG 22096[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=33, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,767]DEBUG 22096[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=35, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,767]DEBUG 22096[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=36, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,768]DEBUG 22097[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,768]DEBUG 22097[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2020-04-01 10:13:00,769]DEBUG 22098[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,769]DEBUG 22098[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2020-04-01 10:13:00,770]DEBUG 22099[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,770]DEBUG 22099[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2020-04-01 10:13:00,771]DEBUG 22100[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 37
[2020-04-01 10:13:00,772]DEBUG 22101[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,772]DEBUG 22101[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,773]DEBUG 22102[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,773]DEBUG 22102[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2020-04-01 10:13:00,773]DEBUG 22102[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,774]DEBUG 22103[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,774]DEBUG 22103[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=34, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,774]DEBUG 22103[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=33, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,774]DEBUG 22103[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=37, maxRange=9.99999999E7, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,775]DEBUG 22104[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=35, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,775]DEBUG 22104[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=36, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,775]DEBUG 22104[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,776]DEBUG 22105[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select customerty0_.ID as ID2_, customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_ from CustomerTypes customerty0_ where customerty0_.TypeName=?
[2020-04-01 10:13:00,777]DEBUG 22106[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2020-04-01 10:13:00,777]DEBUG 22106[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#37]
[2020-04-01 10:13:00,778]DEBUG 22107[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2020-04-01 10:13:00,778]DEBUG 22107[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,778]DEBUG 22107[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2020-04-01 10:13:00,779]DEBUG 22108[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,779]DEBUG 22108[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,779]DEBUG 22108[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2020-04-01 10:13:00,780]DEBUG 22109[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,780]DEBUG 22109[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,780]DEBUG 22109[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=34, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,780]DEBUG 22109[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=33, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,781]DEBUG 22110[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=37, maxRange=9.99999999E7, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,781]DEBUG 22110[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=35, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,781]DEBUG 22110[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=36, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,781]DEBUG 22110[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,782]DEBUG 22111[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2020-04-01 10:13:00,782]DEBUG 22111[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,783]DEBUG 22112[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,783]DEBUG 22112[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,784]DEBUG 22113[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2020-04-01 10:13:00,784]DEBUG 22113[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,784]DEBUG 22113[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,785]DEBUG 22114[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=34, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,785]DEBUG 22114[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=33, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,785]DEBUG 22114[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=37, maxRange=9.99999999E7, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,785]DEBUG 22114[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=35, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,786]DEBUG 22115[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=36, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,786]DEBUG 22115[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,786]DEBUG 22115[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2020-04-01 10:13:00,787]DEBUG 22116[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,787]DEBUG 22116[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,788]DEBUG 22117[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,788]DEBUG 22117[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2020-04-01 10:13:00,788]DEBUG 22117[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,789]DEBUG 22118[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,789]DEBUG 22118[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=34, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,789]DEBUG 22118[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=33, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,789]DEBUG 22118[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=37, maxRange=9.99999999E7, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,790]DEBUG 22119[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=35, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,790]DEBUG 22119[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=36, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,790]DEBUG 22119[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,790]DEBUG 22119[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2020-04-01 10:13:00,791]DEBUG 22120[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,792]DEBUG 22121[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,792]DEBUG 22121[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,793]DEBUG 22122[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2020-04-01 10:13:00,793]DEBUG 22122[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,794]DEBUG 22123[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,794]DEBUG 22123[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=34, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,794]DEBUG 22123[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=33, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,795]DEBUG 22124[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=37, maxRange=9.99999999E7, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,795]DEBUG 22124[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=35, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,795]DEBUG 22124[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=36, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,796]DEBUG 22125[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,796]DEBUG 22125[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2020-04-01 10:13:00,797]DEBUG 22126[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,797]DEBUG 22126[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,798]DEBUG 22127[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,798]DEBUG 22127[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2020-04-01 10:13:00,798]DEBUG 22127[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,798]DEBUG 22127[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,799]DEBUG 22128[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=34, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,799]DEBUG 22128[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=33, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,799]DEBUG 22128[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=37, maxRange=9.99999999E7, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,800]DEBUG 22129[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=35, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,800]DEBUG 22129[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=36, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,800]DEBUG 22129[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,800]DEBUG 22129[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2020-04-01 10:13:00,801]DEBUG 22130[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,801]DEBUG 22130[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,802]DEBUG 22131[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,802]DEBUG 22131[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2020-04-01 10:13:00,802]DEBUG 22131[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,803]DEBUG 22132[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,803]DEBUG 22132[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=34, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,803]DEBUG 22132[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=33, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,803]DEBUG 22132[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=37, maxRange=9.99999999E7, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,804]DEBUG 22133[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=35, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,804]DEBUG 22133[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=36, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,804]DEBUG 22133[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,804]DEBUG 22133[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2020-04-01 10:13:00,805]DEBUG 22134[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,806]DEBUG 22135[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,806]DEBUG 22135[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,807]DEBUG 22136[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2020-04-01 10:13:00,807]DEBUG 22136[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,807]DEBUG 22136[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,807]DEBUG 22136[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=34, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,808]DEBUG 22137[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=33, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,808]DEBUG 22137[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=37, maxRange=9.99999999E7, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,808]DEBUG 22137[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=35, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,808]DEBUG 22137[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=36, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,809]DEBUG 22138[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,809]DEBUG 22138[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2020-04-01 10:13:00,810]DEBUG 22139[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,810]DEBUG 22139[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,810]DEBUG 22139[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,811]DEBUG 22140[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2020-04-01 10:13:00,811]DEBUG 22140[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,811]DEBUG 22140[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,812]DEBUG 22141[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=34, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,812]DEBUG 22141[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=33, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,812]DEBUG 22141[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=37, maxRange=9.99999999E7, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,812]DEBUG 22141[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=35, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,813]DEBUG 22142[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=36, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,813]DEBUG 22142[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,813]DEBUG 22142[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2020-04-01 10:13:00,814]DEBUG 22143[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,814]DEBUG 22143[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,815]DEBUG 22144[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,815]DEBUG 22144[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2020-04-01 10:13:00,815]DEBUG 22144[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,816]DEBUG 22145[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,816]DEBUG 22145[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=34, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,816]DEBUG 22145[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=33, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,817]DEBUG 22146[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=37, maxRange=9.99999999E7, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,817]DEBUG 22146[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=35, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,817]DEBUG 22146[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=36, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,817]DEBUG 22146[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,818]DEBUG 22147[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2020-04-01 10:13:00,818]DEBUG 22147[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,819]DEBUG 22148[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@1817d8b6 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@3e600af8, testMethod = testInsertOrUpdate@CustomerTypeDaoTest, testException = [null]]]
[2020-04-01 10:13:00,819]DEBUG 22148[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2020-04-01 10:13:00,819]DEBUG 22148[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@174f78fa]
[2020-04-01 10:13:00,820]DEBUG 22149[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2020-04-01 10:13:00,822]DEBUG 22151[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2020-04-01 10:13:00,822]DEBUG 22151[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2020-04-01 10:13:00,822]DEBUG 22151[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@174f78fa] after transaction
[2020-04-01 10:13:00,823]DEBUG 22152[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2020-04-01 10:13:00,823]DEBUG 22152[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2020-04-01 10:13:00,823]DEBUG 22152[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2020-04-01 10:13:00,824] INFO 22153[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@1817d8b6 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@3e600af8, testMethod = testInsertOrUpdate@CustomerTypeDaoTest, testException = [null]]]
[2020-04-01 10:13:00,824]DEBUG 22153[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@1817d8b6 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@3e600af8, testMethod = testInsertOrUpdate@CustomerTypeDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2020-04-01 10:13:00,825]DEBUG 22154[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2020-04-01 10:13:00,825]DEBUG 22154[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2020-04-01 10:13:00,825]DEBUG 22154[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@1817d8b6 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@568dfcd, testMethod = [null], testException = [null]]].
[2020-04-01 10:13:00,826]DEBUG 22155[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2020-04-01 10:13:00,826]DEBUG 22155[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2020-04-01 10:13:00,826]DEBUG 22155[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2020-04-01 10:13:00,827]DEBUG 22156[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2020-04-01 10:13:00,827]DEBUG 22156[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2020-04-01 10:13:00,827]DEBUG 22156[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2020-04-01 10:13:00,827]DEBUG 22156[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2020-04-01 10:13:00,828]DEBUG 22157[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2020-04-01 10:13:00,828]DEBUG 22157[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2020-04-01 10:13:00,828]DEBUG 22157[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2020-04-01 10:13:00,828]DEBUG 22157[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2020-04-01 10:13:00,829]DEBUG 22158[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2020-04-01 10:13:00,829]DEBUG 22158[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2020-04-01 10:13:00,829]DEBUG 22158[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2020-04-01 10:13:00,829]DEBUG 22158[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2020-04-01 10:13:00,829]DEBUG 22158[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2020-04-01 10:13:00,830]DEBUG 22159[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2020-04-01 10:13:00,830]DEBUG 22159[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2020-04-01 10:13:00,830]DEBUG 22159[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2020-04-01 10:13:00,830]DEBUG 22159[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2020-04-01 10:13:00,831]DEBUG 22160[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2020-04-01 10:13:00,831]DEBUG 22160[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' with 0 common interceptors and 1 specific interceptors
[2020-04-01 10:13:00,831]DEBUG 22160[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@568dfcd]
[2020-04-01 10:13:00,832]DEBUG 22161[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testDelete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2020-04-01 10:13:00,832]DEBUG 22161[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@1817d8b6 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@568dfcd, testMethod = testDelete@CustomerTypeDaoTest, testException = [null]]]
[2020-04-01 10:13:00,833]DEBUG 22162[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2020-04-01 10:13:00,833]DEBUG 22162[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testDelete]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2020-04-01 10:13:00,833]DEBUG 22162[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15857251808
[2020-04-01 10:13:00,834]DEBUG 22163[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@6187838f] for Hibernate transaction
[2020-04-01 10:13:00,834]DEBUG 22163[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@6187838f]
[2020-04-01 10:13:00,834]DEBUG 22163[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2020-04-01 10:13:00,834]DEBUG 22163[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2020-04-01 10:13:00,835]DEBUG 22164[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2020-04-01 10:13:00,835]DEBUG 22164[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@1817d8b6 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@568dfcd, testMethod = testDelete@CustomerTypeDaoTest, testException = [null]]]
[2020-04-01 10:13:00,835] INFO 22164[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (10): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@ea6e1ae]; rollback [true]
[2020-04-01 10:13:00,835]DEBUG 22164[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2020-04-01 10:13:00,836]DEBUG 22165[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,836]DEBUG 22165[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2020-04-01 10:13:00,837]DEBUG 22166[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 38
[2020-04-01 10:13:00,838]DEBUG 22167[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,838]DEBUG 22167[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2020-04-01 10:13:00,839]DEBUG 22168[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,839]DEBUG 22168[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2020-04-01 10:13:00,840]DEBUG 22169[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 39
[2020-04-01 10:13:00,840]DEBUG 22169[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,841]DEBUG 22170[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2020-04-01 10:13:00,841]DEBUG 22170[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,842]DEBUG 22171[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2020-04-01 10:13:00,843]DEBUG 22172[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 40
[2020-04-01 10:13:00,843]DEBUG 22172[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,844]DEBUG 22173[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2020-04-01 10:13:00,844]DEBUG 22173[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,844]DEBUG 22173[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2020-04-01 10:13:00,845]DEBUG 22174[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 41
[2020-04-01 10:13:00,846]DEBUG 22175[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,846] INFO 22175[main] - org.hibernate.event.def.DefaultDeleteEventListener.deleteTransientEntity(DefaultDeleteEventListener.java:203) - handling transient entity in delete processing
[2020-04-01 10:13:00,847]DEBUG 22176[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,847]DEBUG 22176[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,847]DEBUG 22176[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,848]DEBUG 22177[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,848]DEBUG 22177[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,848]DEBUG 22177[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=41, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,849]DEBUG 22178[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=39, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,849]DEBUG 22178[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=40, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,849]DEBUG 22178[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=38, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,850]DEBUG 22179[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,850]DEBUG 22179[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select customerty0_.ID as ID2_, customerty0_.Discount as Discount2_, customerty0_.MaxRange as MaxRange2_, customerty0_.MinRange as MinRange2_, customerty0_.TypeName as TypeName2_ from CustomerTypes customerty0_ where customerty0_.TypeName=?
[2020-04-01 10:13:00,851]DEBUG 22180[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2020-04-01 10:13:00,852]DEBUG 22181[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.CustomerType#38]
[2020-04-01 10:13:00,852]DEBUG 22181[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2020-04-01 10:13:00,852]DEBUG 22181[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,852]DEBUG 22181[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2020-04-01 10:13:00,853]DEBUG 22182[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,853]DEBUG 22182[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,854]DEBUG 22183[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,854]DEBUG 22183[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,854]DEBUG 22183[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,854]DEBUG 22183[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=41, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,855]DEBUG 22184[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=39, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,855]DEBUG 22184[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=40, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,855]DEBUG 22184[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=38, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,855]DEBUG 22184[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,856]DEBUG 22185[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2020-04-01 10:13:00,856]DEBUG 22185[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,857]DEBUG 22186[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,857]DEBUG 22186[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,857]DEBUG 22186[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,858]DEBUG 22187[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,858]DEBUG 22187[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,858]DEBUG 22187[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=41, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,859]DEBUG 22188[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=39, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,859]DEBUG 22188[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=40, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,859]DEBUG 22188[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=38, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,859]DEBUG 22188[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,860]DEBUG 22189[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2020-04-01 10:13:00,861]DEBUG 22190[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,861]DEBUG 22190[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,862]DEBUG 22191[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,862]DEBUG 22191[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,862]DEBUG 22191[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,863]DEBUG 22192[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,863]DEBUG 22192[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=41, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,863]DEBUG 22192[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=39, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,864]DEBUG 22193[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=40, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,864]DEBUG 22193[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=38, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,864]DEBUG 22193[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,864]DEBUG 22193[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2020-04-01 10:13:00,865]DEBUG 22194[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,866]DEBUG 22195[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,866]DEBUG 22195[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,866]DEBUG 22195[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,867]DEBUG 22196[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,867]DEBUG 22196[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,867]DEBUG 22196[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=41, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,867]DEBUG 22196[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=39, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,868]DEBUG 22197[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=40, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,868]DEBUG 22197[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=38, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,868]DEBUG 22197[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,868]DEBUG 22197[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2020-04-01 10:13:00,869]DEBUG 22198[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,870]DEBUG 22199[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,870]DEBUG 22199[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,870]DEBUG 22199[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,871]DEBUG 22200[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,871]DEBUG 22200[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,871]DEBUG 22200[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=41, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,871]DEBUG 22200[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=39, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,872]DEBUG 22201[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=40, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,872]DEBUG 22201[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=38, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,872]DEBUG 22201[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,872]DEBUG 22201[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2020-04-01 10:13:00,873]DEBUG 22202[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,874]DEBUG 22203[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,874]DEBUG 22203[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,874]DEBUG 22203[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,875]DEBUG 22204[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,875]DEBUG 22204[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,875]DEBUG 22204[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=41, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,875]DEBUG 22204[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=39, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,875]DEBUG 22204[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=40, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,876]DEBUG 22205[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=38, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,876]DEBUG 22205[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,876]DEBUG 22205[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2020-04-01 10:13:00,877]DEBUG 22206[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,878]DEBUG 22207[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,878]DEBUG 22207[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,878]DEBUG 22207[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,878]DEBUG 22207[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,879]DEBUG 22208[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,879]DEBUG 22208[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=41, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,879]DEBUG 22208[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=39, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,879]DEBUG 22208[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=40, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,880]DEBUG 22209[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=38, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,880]DEBUG 22209[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,880]DEBUG 22209[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2020-04-01 10:13:00,881]DEBUG 22210[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,882]DEBUG 22211[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,882]DEBUG 22211[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,882]DEBUG 22211[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,883]DEBUG 22212[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,883]DEBUG 22212[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,883]DEBUG 22212[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=41, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,883]DEBUG 22212[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=39, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,884]DEBUG 22213[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=40, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,884]DEBUG 22213[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=38, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,884]DEBUG 22213[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,884]DEBUG 22213[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2020-04-01 10:13:00,885]DEBUG 22214[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,886]DEBUG 22215[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,886]DEBUG 22215[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,886]DEBUG 22215[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,887]DEBUG 22216[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,887]DEBUG 22216[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,887]DEBUG 22216[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=41, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,887]DEBUG 22216[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=39, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,888]DEBUG 22217[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=40, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,888]DEBUG 22217[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=38, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,888]DEBUG 22217[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,888]DEBUG 22217[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2020-04-01 10:13:00,889]DEBUG 22218[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,890]DEBUG 22219[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@1817d8b6 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@568dfcd, testMethod = testDelete@CustomerTypeDaoTest, testException = [null]]]
[2020-04-01 10:13:00,890]DEBUG 22219[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2020-04-01 10:13:00,890]DEBUG 22219[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@6187838f]
[2020-04-01 10:13:00,890]DEBUG 22219[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2020-04-01 10:13:00,892]DEBUG 22221[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2020-04-01 10:13:00,893]DEBUG 22222[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2020-04-01 10:13:00,893]DEBUG 22222[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@6187838f] after transaction
[2020-04-01 10:13:00,893]DEBUG 22222[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2020-04-01 10:13:00,894]DEBUG 22223[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2020-04-01 10:13:00,894]DEBUG 22223[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2020-04-01 10:13:00,894] INFO 22223[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@1817d8b6 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@568dfcd, testMethod = testDelete@CustomerTypeDaoTest, testException = [null]]]
[2020-04-01 10:13:00,895]DEBUG 22224[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@1817d8b6 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@568dfcd, testMethod = testDelete@CustomerTypeDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2020-04-01 10:13:00,895]DEBUG 22224[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2020-04-01 10:13:00,896]DEBUG 22225[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest]
[2020-04-01 10:13:00,896]DEBUG 22225[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@1817d8b6 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@2cf363bd, testMethod = [null], testException = [null]]].
[2020-04-01 10:13:00,896]DEBUG 22225[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2020-04-01 10:13:00,897]DEBUG 22226[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2020-04-01 10:13:00,897]DEBUG 22226[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2020-04-01 10:13:00,897]DEBUG 22226[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2020-04-01 10:13:00,897]DEBUG 22226[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2020-04-01 10:13:00,897]DEBUG 22226[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2020-04-01 10:13:00,898]DEBUG 22227[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2020-04-01 10:13:00,898]DEBUG 22227[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2020-04-01 10:13:00,898]DEBUG 22227[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2020-04-01 10:13:00,898]DEBUG 22227[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2020-04-01 10:13:00,899]DEBUG 22228[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2020-04-01 10:13:00,899]DEBUG 22228[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2020-04-01 10:13:00,899]DEBUG 22228[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2020-04-01 10:13:00,899]DEBUG 22228[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2020-04-01 10:13:00,900]DEBUG 22229[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2020-04-01 10:13:00,900]DEBUG 22229[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2020-04-01 10:13:00,900]DEBUG 22229[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2020-04-01 10:13:00,900]DEBUG 22229[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2020-04-01 10:13:00,900]DEBUG 22229[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2020-04-01 10:13:00,901]DEBUG 22230[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2020-04-01 10:13:00,901]DEBUG 22230[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2020-04-01 10:13:00,901]DEBUG 22230[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest' with 0 common interceptors and 1 specific interceptors
[2020-04-01 10:13:00,902]DEBUG 22231[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@2cf363bd]
[2020-04-01 10:13:00,902]DEBUG 22231[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testContextFile' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2020-04-01 10:13:00,903]DEBUG 22232[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@1817d8b6 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@2cf363bd, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2020-04-01 10:13:00,903]DEBUG 22232[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2020-04-01 10:13:00,904]DEBUG 22233[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testContextFile]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2020-04-01 10:13:00,904]DEBUG 22233[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15857251809
[2020-04-01 10:13:00,904]DEBUG 22233[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@e88da92] for Hibernate transaction
[2020-04-01 10:13:00,904]DEBUG 22233[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@e88da92]
[2020-04-01 10:13:00,905]DEBUG 22234[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2020-04-01 10:13:00,905]DEBUG 22234[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2020-04-01 10:13:00,905]DEBUG 22234[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2020-04-01 10:13:00,906]DEBUG 22235[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@1817d8b6 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@2cf363bd, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2020-04-01 10:13:00,906] INFO 22235[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (11): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@ea6e1ae]; rollback [true]
[2020-04-01 10:13:00,906]DEBUG 22235[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2020-04-01 10:13:00,907]DEBUG 22236[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,907]DEBUG 22236[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2020-04-01 10:13:00,908]DEBUG 22237[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 42
[2020-04-01 10:13:00,909]DEBUG 22238[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,909]DEBUG 22238[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2020-04-01 10:13:00,909]DEBUG 22238[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,910]DEBUG 22239[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2020-04-01 10:13:00,911]DEBUG 22240[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 43
[2020-04-01 10:13:00,911]DEBUG 22240[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,912]DEBUG 22241[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2020-04-01 10:13:00,912]DEBUG 22241[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,913]DEBUG 22242[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2020-04-01 10:13:00,914]DEBUG 22243[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 44
[2020-04-01 10:13:00,914]DEBUG 22243[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,915]DEBUG 22244[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2020-04-01 10:13:00,915]DEBUG 22244[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,916]DEBUG 22245[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2020-04-01 10:13:00,917]DEBUG 22246[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 45
[2020-04-01 10:13:00,917]DEBUG 22246[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,918]DEBUG 22247[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,918]DEBUG 22247[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,918]DEBUG 22247[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,918]DEBUG 22247[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,919]DEBUG 22248[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,919]DEBUG 22248[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=42, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,919]DEBUG 22248[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=45, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,919]DEBUG 22248[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=43, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,920]DEBUG 22249[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=44, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,920]DEBUG 22249[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,920]DEBUG 22249[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2020-04-01 10:13:00,921]DEBUG 22250[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,921]DEBUG 22250[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,922]DEBUG 22251[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,922]DEBUG 22251[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,922]DEBUG 22251[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,922]DEBUG 22251[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,923]DEBUG 22252[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=42, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,923]DEBUG 22252[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=45, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,923]DEBUG 22252[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=43, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,924]DEBUG 22253[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=44, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,924]DEBUG 22253[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,924]DEBUG 22253[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2020-04-01 10:13:00,925]DEBUG 22254[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,925]DEBUG 22254[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,926]DEBUG 22255[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,926]DEBUG 22255[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,926]DEBUG 22255[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,926]DEBUG 22255[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,927]DEBUG 22256[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=42, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,927]DEBUG 22256[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=45, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,927]DEBUG 22256[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=43, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,927]DEBUG 22256[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=44, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,928]DEBUG 22257[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,928]DEBUG 22257[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2020-04-01 10:13:00,929]DEBUG 22258[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,929]DEBUG 22258[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,929]DEBUG 22258[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,930]DEBUG 22259[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,930]DEBUG 22259[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,930]DEBUG 22259[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,931]DEBUG 22260[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=42, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,931]DEBUG 22260[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=45, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,931]DEBUG 22260[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=43, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,931]DEBUG 22260[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=44, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,932]DEBUG 22261[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,932]DEBUG 22261[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2020-04-01 10:13:00,933]DEBUG 22262[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,933]DEBUG 22262[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,934]DEBUG 22263[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,934]DEBUG 22263[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,934]DEBUG 22263[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,935]DEBUG 22264[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,935]DEBUG 22264[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=42, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,935]DEBUG 22264[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=45, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,935]DEBUG 22264[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=43, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,936]DEBUG 22265[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=44, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,936]DEBUG 22265[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,936]DEBUG 22265[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2020-04-01 10:13:00,937]DEBUG 22266[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,937]DEBUG 22266[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,938]DEBUG 22267[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,938]DEBUG 22267[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,938]DEBUG 22267[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,938]DEBUG 22267[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,939]DEBUG 22268[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=42, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,939]DEBUG 22268[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=45, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,939]DEBUG 22268[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=43, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,940]DEBUG 22269[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=44, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,940]DEBUG 22269[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,940]DEBUG 22269[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2020-04-01 10:13:00,941]DEBUG 22270[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,941]DEBUG 22270[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,942]DEBUG 22271[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,942]DEBUG 22271[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,942]DEBUG 22271[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,942]DEBUG 22271[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,943]DEBUG 22272[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=42, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,943]DEBUG 22272[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=45, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,943]DEBUG 22272[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=43, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,943]DEBUG 22272[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=44, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,944]DEBUG 22273[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,944]DEBUG 22273[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2020-04-01 10:13:00,945]DEBUG 22274[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,945]DEBUG 22274[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,946]DEBUG 22275[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,946]DEBUG 22275[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,946]DEBUG 22275[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,947]DEBUG 22276[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,947]DEBUG 22276[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=42, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,947]DEBUG 22276[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=45, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,947]DEBUG 22276[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=43, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,948]DEBUG 22277[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=44, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,948]DEBUG 22277[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,948]DEBUG 22277[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2020-04-01 10:13:00,949]DEBUG 22278[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,949]DEBUG 22278[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:00,950]DEBUG 22279[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:00,950]DEBUG 22279[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2020-04-01 10:13:00,950]DEBUG 22279[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:00,951]DEBUG 22280[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:00,951]DEBUG 22280[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Standard, id=42, maxRange=9999999.9, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,951]DEBUG 22280[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Platinum, id=45, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,951]DEBUG 22280[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Silver, id=43, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,952]DEBUG 22281[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.CustomerType{typeName=Gold, id=44, maxRange=99999.0, minRange=0.0, discount=1.2}
[2020-04-01 10:13:00,952]DEBUG 22281[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:00,952]DEBUG 22281[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2020-04-01 10:13:00,953]DEBUG 22282[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:00,953]DEBUG 22282[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@1817d8b6 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@2cf363bd, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2020-04-01 10:13:00,954]DEBUG 22283[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2020-04-01 10:13:00,954]DEBUG 22283[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@e88da92]
[2020-04-01 10:13:00,954]DEBUG 22283[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2020-04-01 10:13:00,956]DEBUG 22285[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2020-04-01 10:13:00,956]DEBUG 22285[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2020-04-01 10:13:00,957]DEBUG 22286[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@e88da92] after transaction
[2020-04-01 10:13:00,957]DEBUG 22286[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2020-04-01 10:13:00,957]DEBUG 22286[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2020-04-01 10:13:00,957]DEBUG 22286[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2020-04-01 10:13:00,958] INFO 22287[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@1817d8b6 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@2cf363bd, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2020-04-01 10:13:00,958]DEBUG 22287[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@1817d8b6 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest@2cf363bd, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2020-04-01 10:13:00,959]DEBUG 22288[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestClass(DirtiesContextTestExecutionListener.java:113) - After test class: context [[TestContext@1817d8b6 testClass = CustomerTypeDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = [null], testMethod = [null], testException = [null]]], dirtiesContext [false].
[2020-04-01 10:13:00,960]DEBUG 22289[main] - org.springframework.test.context.junit4.SpringJUnit4ClassRunner.<init>(SpringJUnit4ClassRunner.java:106) - SpringJUnit4ClassRunner constructor called with [class com.softserveinc.edu.oms.persistence.dao.RegionDaoTest].
[2020-04-01 10:13:00,961] INFO 22290[main] - org.springframework.test.context.TestContextManager.retrieveTestExecutionListeners(TestContextManager.java:185) - @TestExecutionListeners is not present for class [class com.softserveinc.edu.oms.persistence.dao.RegionDaoTest]: using defaults.
[2020-04-01 10:13:00,962]DEBUG 22291[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RegionDaoTest]
[2020-04-01 10:13:00,962]DEBUG 22291[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RegionDaoTest]
[2020-04-01 10:13:00,963]DEBUG 22292[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RegionDaoTest]
[2020-04-01 10:13:00,963]DEBUG 22292[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RegionDaoTest]
[2020-04-01 10:13:00,966]DEBUG 22295[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RegionDaoTest]
[2020-04-01 10:13:00,966]DEBUG 22295[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RegionDaoTest]
[2020-04-01 10:13:00,967]DEBUG 22296[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@430e85e7 testClass = RegionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@6e792315, testMethod = [null], testException = [null]]].
[2020-04-01 10:13:00,974]DEBUG 22303[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.RegionDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2020-04-01 10:13:00,975]DEBUG 22304[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.RegionDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2020-04-01 10:13:00,975]DEBUG 22304[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.RegionDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2020-04-01 10:13:00,975]DEBUG 22304[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.RegionDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2020-04-01 10:13:00,976]DEBUG 22305[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.RegionDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2020-04-01 10:13:00,976]DEBUG 22305[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.RegionDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2020-04-01 10:13:00,977]DEBUG 22306[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.RegionDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2020-04-01 10:13:00,977]DEBUG 22306[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.RegionDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2020-04-01 10:13:00,977]DEBUG 22306[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.RegionDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2020-04-01 10:13:00,978]DEBUG 22307[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.RegionDaoTest]: AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2020-04-01 10:13:00,978]DEBUG 22307[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2020-04-01 10:13:00,979]DEBUG 22308[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2020-04-01 10:13:00,979]DEBUG 22308[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest' to bean named 'customerTypeDao'
[2020-04-01 10:13:00,979]DEBUG 22308[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2020-04-01 10:13:00,980]DEBUG 22309[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2020-04-01 10:13:00,980]DEBUG 22309[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest' to bean named 'dimensionDao'
[2020-04-01 10:13:00,980]DEBUG 22309[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2020-04-01 10:13:00,981]DEBUG 22310[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2020-04-01 10:13:00,981]DEBUG 22310[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest' to bean named 'orderDao'
[2020-04-01 10:13:00,982]DEBUG 22311[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2020-04-01 10:13:00,982]DEBUG 22311[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2020-04-01 10:13:00,982]DEBUG 22311[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest' to bean named 'orderItemDao'
[2020-04-01 10:13:00,983]DEBUG 22312[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2020-04-01 10:13:00,983]DEBUG 22312[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2020-04-01 10:13:00,983]DEBUG 22312[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest' to bean named 'orderStatusDao'
[2020-04-01 10:13:00,984]DEBUG 22313[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2020-04-01 10:13:00,984]DEBUG 22313[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2020-04-01 10:13:00,984]DEBUG 22313[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest' to bean named 'productDao'
[2020-04-01 10:13:00,985]DEBUG 22314[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2020-04-01 10:13:00,985]DEBUG 22314[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2020-04-01 10:13:00,985]DEBUG 22314[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest' to bean named 'regionDao'
[2020-04-01 10:13:00,986]DEBUG 22315[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2020-04-01 10:13:00,986]DEBUG 22315[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2020-04-01 10:13:00,986]DEBUG 22315[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest' to bean named 'roleDao'
[2020-04-01 10:13:00,987]DEBUG 22316[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2020-04-01 10:13:00,987]DEBUG 22316[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2020-04-01 10:13:00,988]DEBUG 22317[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest' to bean named 'userDao'
[2020-04-01 10:13:00,988]DEBUG 22317[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2020-04-01 10:13:00,988]DEBUG 22317[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2020-04-01 10:13:00,989]DEBUG 22318[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest' to bean named 'sessionFactory'
[2020-04-01 10:13:00,989]DEBUG 22318[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2020-04-01 10:13:00,990]DEBUG 22319[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByRegionName' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2020-04-01 10:13:00,990]DEBUG 22319[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest' with 0 common interceptors and 1 specific interceptors
[2020-04-01 10:13:00,991]DEBUG 22320[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@6e792315]
[2020-04-01 10:13:00,992]DEBUG 22321[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RegionDaoTest.testFindByRegionName()
[2020-04-01 10:13:00,992]DEBUG 22321[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'setUp' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2020-04-01 10:13:00,993]DEBUG 22322[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RegionDaoTest.setUp()
[2020-04-01 10:13:00,993]DEBUG 22322[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'tearDown' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2020-04-01 10:13:00,994]DEBUG 22323[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RegionDaoTest.tearDown()
[2020-04-01 10:13:00,994]DEBUG 22323[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindAll' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2020-04-01 10:13:00,995]DEBUG 22324[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RegionDaoTest.testFindAll()
[2020-04-01 10:13:00,995]DEBUG 22324[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByOneOfCriterions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2020-04-01 10:13:00,995]DEBUG 22324[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RegionDaoTest.testFindByOneOfCriterions()
[2020-04-01 10:13:00,996]DEBUG 22325[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByID' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2020-04-01 10:13:00,996]DEBUG 22325[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RegionDaoTest.testFindByID()
[2020-04-01 10:13:00,996]DEBUG 22325[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testInsertOrUpdate' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2020-04-01 10:13:00,997]DEBUG 22326[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RegionDaoTest.testInsertOrUpdate()
[2020-04-01 10:13:00,997]DEBUG 22326[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testDelete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2020-04-01 10:13:00,998]DEBUG 22327[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RegionDaoTest.testDelete()
[2020-04-01 10:13:00,998]DEBUG 22327[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanRole()
[2020-04-01 10:13:00,998]DEBUG 22327[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testContextFile' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2020-04-01 10:13:00,999]DEBUG 22328[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.testContextFile()
[2020-04-01 10:13:00,999]DEBUG 22328[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanDB()
[2020-04-01 10:13:01,000]DEBUG 22329[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanUser()
[2020-04-01 10:13:01,000]DEBUG 22329[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanRegion()
[2020-04-01 10:13:01,000]DEBUG 22329[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanProduct()
[2020-04-01 10:13:01,001]DEBUG 22330[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrderStatus()
[2020-04-01 10:13:01,002]DEBUG 22331[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrderItem()
[2020-04-01 10:13:01,003]DEBUG 22332[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrder()
[2020-04-01 10:13:01,003]DEBUG 22332[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanDimension()
[2020-04-01 10:13:01,003]DEBUG 22332[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanCustomerType()
[2020-04-01 10:13:01,004]DEBUG 22333[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:749) - Found finalize() method - using NO_OVERRIDE
[2020-04-01 10:13:01,004]DEBUG 22333[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:761) - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
[2020-04-01 10:13:01,004]DEBUG 22333[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
[2020-04-01 10:13:01,005]DEBUG 22334[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:766) - Found 'hashCode' method: public native int java.lang.Object.hashCode()
[2020-04-01 10:13:01,005]DEBUG 22334[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
[2020-04-01 10:13:01,005]DEBUG 22334[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
[2020-04-01 10:13:01,005]DEBUG 22334[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
[2020-04-01 10:13:01,006]DEBUG 22335[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
[2020-04-01 10:13:01,006]DEBUG 22335[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
[2020-04-01 10:13:01,006]DEBUG 22335[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2020-04-01 10:13:01,006]DEBUG 22335[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2020-04-01 10:13:01,007]DEBUG 22336[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
[2020-04-01 10:13:01,007]DEBUG 22336[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
[2020-04-01 10:13:01,007]DEBUG 22336[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
[2020-04-01 10:13:01,008]DEBUG 22337[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
[2020-04-01 10:13:01,008]DEBUG 22337[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
[2020-04-01 10:13:01,008]DEBUG 22337[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[2020-04-01 10:13:01,009]DEBUG 22338[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[2020-04-01 10:13:01,009]DEBUG 22338[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
[2020-04-01 10:13:01,009]DEBUG 22338[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
[2020-04-01 10:13:01,009]DEBUG 22338[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
[2020-04-01 10:13:01,010]DEBUG 22339[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
[2020-04-01 10:13:01,010]DEBUG 22339[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
[2020-04-01 10:13:01,011]DEBUG 22340[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
[2020-04-01 10:13:01,011]DEBUG 22340[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2020-04-01 10:13:01,011]DEBUG 22340[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
[2020-04-01 10:13:01,012]DEBUG 22341[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
[2020-04-01 10:13:01,012]DEBUG 22341[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
[2020-04-01 10:13:01,036]DEBUG 22365[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByRegionName' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2020-04-01 10:13:01,037]DEBUG 22366[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@430e85e7 testClass = RegionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@6e792315, testMethod = testFindByRegionName@RegionDaoTest, testException = [null]]]
[2020-04-01 10:13:01,037]DEBUG 22366[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.retrieveConfigurationAttributes(TransactionalTestExecutionListener.java:466) - Retrieved @TransactionConfiguration [@org.springframework.test.context.transaction.TransactionConfiguration(defaultRollback=true, transactionManager=transactionManager)] for test class [class com.softserveinc.edu.oms.persistence.dao.RegionDaoTest]
[2020-04-01 10:13:01,037]DEBUG 22366[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.retrieveConfigurationAttributes(TransactionalTestExecutionListener.java:483) - Retrieved TransactionConfigurationAttributes [[TransactionConfigurationAttributes@3bcc95d5 transactionManagerName = 'transactionManager', defaultRollback = true]] for class [class com.softserveinc.edu.oms.persistence.dao.RegionDaoTest]
[2020-04-01 10:13:01,037]DEBUG 22366[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2020-04-01 10:13:01,038]DEBUG 22367[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByRegionName]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2020-04-01 10:13:01,038]DEBUG 22367[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15857251810
[2020-04-01 10:13:01,038]DEBUG 22367[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@7ea042cf] for Hibernate transaction
[2020-04-01 10:13:01,039]DEBUG 22368[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7ea042cf]
[2020-04-01 10:13:01,039]DEBUG 22368[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2020-04-01 10:13:01,039]DEBUG 22368[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2020-04-01 10:13:01,039]DEBUG 22368[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2020-04-01 10:13:01,040]DEBUG 22369[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@430e85e7 testClass = RegionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@6e792315, testMethod = testFindByRegionName@RegionDaoTest, testException = [null]]]
[2020-04-01 10:13:01,040] INFO 22369[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (1): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@ea6e1ae]; rollback [true]
[2020-04-01 10:13:01,041]DEBUG 22370[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2020-04-01 10:13:01,042]DEBUG 22371[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:01,042]DEBUG 22371[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Regions (RegionName) values (?)
[2020-04-01 10:13:01,044]DEBUG 22373[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 1
[2020-04-01 10:13:01,044]DEBUG 22373[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:01,045]DEBUG 22374[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2020-04-01 10:13:01,045]DEBUG 22374[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:01,045]DEBUG 22374[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Regions (RegionName) values (?)
[2020-04-01 10:13:01,047]DEBUG 22376[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 2
[2020-04-01 10:13:01,047]DEBUG 22376[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:01,048]DEBUG 22377[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2020-04-01 10:13:01,048]DEBUG 22377[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:01,049]DEBUG 22378[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Regions (RegionName) values (?)
[2020-04-01 10:13:01,050]DEBUG 22379[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 3
[2020-04-01 10:13:01,050]DEBUG 22379[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:01,051]DEBUG 22380[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:01,052]DEBUG 22381[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:01,052]DEBUG 22381[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2020-04-01 10:13:01,053]DEBUG 22382[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:01,053]DEBUG 22382[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:01,053]DEBUG 22382[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Region{id=3, regionName=Pidrahuilivka}
[2020-04-01 10:13:01,053]DEBUG 22382[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Region{id=2, regionName=Bibrka}
[2020-04-01 10:13:01,054]DEBUG 22383[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Region{id=1, regionName=Donetsk}
[2020-04-01 10:13:01,054]DEBUG 22383[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:01,054]DEBUG 22383[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID1_0_, this_.RegionName as RegionName1_0_ from Regions this_ where this_.RegionName like ?
[2020-04-01 10:13:01,055]DEBUG 22384[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2020-04-01 10:13:01,056]DEBUG 22385[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Region#2]
[2020-04-01 10:13:01,056]DEBUG 22385[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2020-04-01 10:13:01,056]DEBUG 22385[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:01,057]DEBUG 22386[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2020-04-01 10:13:01,057]DEBUG 22386[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:01,057]DEBUG 22386[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:01,058]DEBUG 22387[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2020-04-01 10:13:01,058]DEBUG 22387[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:01,058]DEBUG 22387[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:01,059]DEBUG 22388[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Region{id=3, regionName=Pidrahuilivka}
[2020-04-01 10:13:01,059]DEBUG 22388[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Region{id=2, regionName=Bibrka}
[2020-04-01 10:13:01,059]DEBUG 22388[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Region{id=1, regionName=Donetsk}
[2020-04-01 10:13:01,059]DEBUG 22388[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:01,060]DEBUG 22389[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2020-04-01 10:13:01,063]DEBUG 22392[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:01,063]DEBUG 22392[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@430e85e7 testClass = RegionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@6e792315, testMethod = testFindByRegionName@RegionDaoTest, testException = [null]]]
[2020-04-01 10:13:01,064]DEBUG 22393[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2020-04-01 10:13:01,064]DEBUG 22393[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7ea042cf]
[2020-04-01 10:13:01,064]DEBUG 22393[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2020-04-01 10:13:01,074]DEBUG 22403[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2020-04-01 10:13:01,075]DEBUG 22404[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2020-04-01 10:13:01,076]DEBUG 22405[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@7ea042cf] after transaction
[2020-04-01 10:13:01,076]DEBUG 22405[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2020-04-01 10:13:01,077]DEBUG 22406[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2020-04-01 10:13:01,077]DEBUG 22406[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2020-04-01 10:13:01,078] INFO 22407[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@430e85e7 testClass = RegionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@6e792315, testMethod = testFindByRegionName@RegionDaoTest, testException = [null]]]
[2020-04-01 10:13:01,078]DEBUG 22407[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@430e85e7 testClass = RegionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@6e792315, testMethod = testFindByRegionName@RegionDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2020-04-01 10:13:01,079]DEBUG 22408[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RegionDaoTest]
[2020-04-01 10:13:01,079]DEBUG 22408[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RegionDaoTest]
[2020-04-01 10:13:01,080]DEBUG 22409[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@430e85e7 testClass = RegionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@3d83b5a1, testMethod = [null], testException = [null]]].
[2020-04-01 10:13:01,080]DEBUG 22409[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2020-04-01 10:13:01,081]DEBUG 22410[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2020-04-01 10:13:01,081]DEBUG 22410[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2020-04-01 10:13:01,081]DEBUG 22410[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2020-04-01 10:13:01,082]DEBUG 22411[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2020-04-01 10:13:01,083]DEBUG 22412[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2020-04-01 10:13:01,083]DEBUG 22412[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2020-04-01 10:13:01,083]DEBUG 22412[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2020-04-01 10:13:01,084]DEBUG 22413[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2020-04-01 10:13:01,085]DEBUG 22414[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2020-04-01 10:13:01,086]DEBUG 22415[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2020-04-01 10:13:01,086]DEBUG 22415[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2020-04-01 10:13:01,087]DEBUG 22416[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2020-04-01 10:13:01,087]DEBUG 22416[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2020-04-01 10:13:01,088]DEBUG 22417[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2020-04-01 10:13:01,088]DEBUG 22417[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2020-04-01 10:13:01,089]DEBUG 22418[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2020-04-01 10:13:01,089]DEBUG 22418[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2020-04-01 10:13:01,089]DEBUG 22418[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2020-04-01 10:13:01,090]DEBUG 22419[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2020-04-01 10:13:01,090]DEBUG 22419[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2020-04-01 10:13:01,091]DEBUG 22420[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest' with 0 common interceptors and 1 specific interceptors
[2020-04-01 10:13:01,091]DEBUG 22420[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@3d83b5a1]
[2020-04-01 10:13:01,091]DEBUG 22420[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindAll' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2020-04-01 10:13:01,092]DEBUG 22421[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@430e85e7 testClass = RegionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@3d83b5a1, testMethod = testFindAll@RegionDaoTest, testException = [null]]]
[2020-04-01 10:13:01,092]DEBUG 22421[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2020-04-01 10:13:01,093]DEBUG 22422[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2020-04-01 10:13:01,093]DEBUG 22422[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15857251810
[2020-04-01 10:13:01,094]DEBUG 22423[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@3f4ee906] for Hibernate transaction
[2020-04-01 10:13:01,094]DEBUG 22423[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@3f4ee906]
[2020-04-01 10:13:01,095]DEBUG 22424[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2020-04-01 10:13:01,095]DEBUG 22424[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2020-04-01 10:13:01,095]DEBUG 22424[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2020-04-01 10:13:01,096]DEBUG 22425[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@430e85e7 testClass = RegionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@3d83b5a1, testMethod = testFindAll@RegionDaoTest, testException = [null]]]
[2020-04-01 10:13:01,096] INFO 22425[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (2): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@ea6e1ae]; rollback [true]
[2020-04-01 10:13:01,097]DEBUG 22426[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2020-04-01 10:13:01,098]DEBUG 22427[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:01,098]DEBUG 22427[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Regions (RegionName) values (?)
[2020-04-01 10:13:01,099]DEBUG 22428[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 4
[2020-04-01 10:13:01,100]DEBUG 22429[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:01,100]DEBUG 22429[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2020-04-01 10:13:01,100]DEBUG 22429[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:01,101]DEBUG 22430[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Regions (RegionName) values (?)
[2020-04-01 10:13:01,102]DEBUG 22431[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 5
[2020-04-01 10:13:01,102]DEBUG 22431[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:01,103]DEBUG 22432[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2020-04-01 10:13:01,103]DEBUG 22432[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:01,104]DEBUG 22433[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Regions (RegionName) values (?)
[2020-04-01 10:13:01,106]DEBUG 22435[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 6
[2020-04-01 10:13:01,108]DEBUG 22437[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:01,109]DEBUG 22438[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:01,109]DEBUG 22438[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:01,110]DEBUG 22439[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2020-04-01 10:13:01,110]DEBUG 22439[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:01,110]DEBUG 22439[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:01,111]DEBUG 22440[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Region{id=4, regionName=Donetsk}
[2020-04-01 10:13:01,111]DEBUG 22440[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Region{id=6, regionName=Pidrahuilivka}
[2020-04-01 10:13:01,111]DEBUG 22440[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Region{id=5, regionName=Bibrka}
[2020-04-01 10:13:01,111]DEBUG 22440[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:01,112]DEBUG 22441[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID1_0_, this_.RegionName as RegionName1_0_ from Regions this_
[2020-04-01 10:13:01,113]DEBUG 22442[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2020-04-01 10:13:01,113]DEBUG 22442[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Region#4]
[2020-04-01 10:13:01,114]DEBUG 22443[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Region#5]
[2020-04-01 10:13:01,114]DEBUG 22443[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Region#6]
[2020-04-01 10:13:01,114]DEBUG 22443[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2020-04-01 10:13:01,115]DEBUG 22444[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:01,115]DEBUG 22444[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2020-04-01 10:13:01,115]DEBUG 22444[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:01,116]DEBUG 22445[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:01,116]DEBUG 22445[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2020-04-01 10:13:01,116]DEBUG 22445[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:01,116]DEBUG 22445[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:01,117]DEBUG 22446[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Region{id=4, regionName=Donetsk}
[2020-04-01 10:13:01,117]DEBUG 22446[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Region{id=6, regionName=Pidrahuilivka}
[2020-04-01 10:13:01,117]DEBUG 22446[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Region{id=5, regionName=Bibrka}
[2020-04-01 10:13:01,117]DEBUG 22446[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:01,118]DEBUG 22447[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2020-04-01 10:13:01,118]DEBUG 22447[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:01,119]DEBUG 22448[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@430e85e7 testClass = RegionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@3d83b5a1, testMethod = testFindAll@RegionDaoTest, testException = [null]]]
[2020-04-01 10:13:01,119]DEBUG 22448[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2020-04-01 10:13:01,119]DEBUG 22448[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@3f4ee906]
[2020-04-01 10:13:01,120]DEBUG 22449[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2020-04-01 10:13:01,122]DEBUG 22451[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2020-04-01 10:13:01,122]DEBUG 22451[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2020-04-01 10:13:01,122]DEBUG 22451[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@3f4ee906] after transaction
[2020-04-01 10:13:01,122]DEBUG 22451[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2020-04-01 10:13:01,123]DEBUG 22452[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2020-04-01 10:13:01,123]DEBUG 22452[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2020-04-01 10:13:01,123] INFO 22452[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@430e85e7 testClass = RegionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@3d83b5a1, testMethod = testFindAll@RegionDaoTest, testException = [null]]]
[2020-04-01 10:13:01,124]DEBUG 22453[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@430e85e7 testClass = RegionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@3d83b5a1, testMethod = testFindAll@RegionDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2020-04-01 10:13:01,124]DEBUG 22453[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RegionDaoTest]
[2020-04-01 10:13:01,125]DEBUG 22454[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RegionDaoTest]
[2020-04-01 10:13:01,125]DEBUG 22454[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@430e85e7 testClass = RegionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@2d3acd03, testMethod = [null], testException = [null]]].
[2020-04-01 10:13:01,125]DEBUG 22454[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2020-04-01 10:13:01,126]DEBUG 22455[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2020-04-01 10:13:01,126]DEBUG 22455[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2020-04-01 10:13:01,126]DEBUG 22455[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2020-04-01 10:13:01,126]DEBUG 22455[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2020-04-01 10:13:01,127]DEBUG 22456[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2020-04-01 10:13:01,127]DEBUG 22456[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2020-04-01 10:13:01,127]DEBUG 22456[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2020-04-01 10:13:01,127]DEBUG 22456[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2020-04-01 10:13:01,128]DEBUG 22457[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2020-04-01 10:13:01,128]DEBUG 22457[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2020-04-01 10:13:01,128]DEBUG 22457[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2020-04-01 10:13:01,128]DEBUG 22457[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2020-04-01 10:13:01,129]DEBUG 22458[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2020-04-01 10:13:01,129]DEBUG 22458[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2020-04-01 10:13:01,129]DEBUG 22458[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2020-04-01 10:13:01,129]DEBUG 22458[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2020-04-01 10:13:01,129]DEBUG 22458[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2020-04-01 10:13:01,130]DEBUG 22459[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2020-04-01 10:13:01,130]DEBUG 22459[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2020-04-01 10:13:01,130]DEBUG 22459[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2020-04-01 10:13:01,131]DEBUG 22460[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest' with 0 common interceptors and 1 specific interceptors
[2020-04-01 10:13:01,131]DEBUG 22460[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@2d3acd03]
[2020-04-01 10:13:01,131]DEBUG 22460[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByOneOfCriterions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2020-04-01 10:13:01,132]DEBUG 22461[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@430e85e7 testClass = RegionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@2d3acd03, testMethod = testFindByOneOfCriterions@RegionDaoTest, testException = [null]]]
[2020-04-01 10:13:01,133]DEBUG 22462[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2020-04-01 10:13:01,134]DEBUG 22463[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByOneOfCriterions]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2020-04-01 10:13:01,134]DEBUG 22463[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15857251811
[2020-04-01 10:13:01,134]DEBUG 22463[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@7f51f3b] for Hibernate transaction
[2020-04-01 10:13:01,135]DEBUG 22464[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7f51f3b]
[2020-04-01 10:13:01,135]DEBUG 22464[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2020-04-01 10:13:01,135]DEBUG 22464[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2020-04-01 10:13:01,135]DEBUG 22464[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2020-04-01 10:13:01,136]DEBUG 22465[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@430e85e7 testClass = RegionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@2d3acd03, testMethod = testFindByOneOfCriterions@RegionDaoTest, testException = [null]]]
[2020-04-01 10:13:01,136] INFO 22465[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (3): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@ea6e1ae]; rollback [true]
[2020-04-01 10:13:01,136]DEBUG 22465[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2020-04-01 10:13:01,137]DEBUG 22466[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:01,137]DEBUG 22466[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Regions (RegionName) values (?)
[2020-04-01 10:13:01,138]DEBUG 22467[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 7
[2020-04-01 10:13:01,139]DEBUG 22468[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:01,139]DEBUG 22468[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2020-04-01 10:13:01,139]DEBUG 22468[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:01,140]DEBUG 22469[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Regions (RegionName) values (?)
[2020-04-01 10:13:01,141]DEBUG 22470[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 8
[2020-04-01 10:13:01,141]DEBUG 22470[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:01,142]DEBUG 22471[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2020-04-01 10:13:01,142]DEBUG 22471[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:01,142]DEBUG 22471[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Regions (RegionName) values (?)
[2020-04-01 10:13:01,143]DEBUG 22472[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 9
[2020-04-01 10:13:01,144]DEBUG 22473[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:01,144]DEBUG 22473[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:01,145]DEBUG 22474[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:01,145]DEBUG 22474[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2020-04-01 10:13:01,145]DEBUG 22474[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:01,146]DEBUG 22475[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:01,146]DEBUG 22475[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Region{id=9, regionName=Pidrahuilivka}
[2020-04-01 10:13:01,146]DEBUG 22475[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Region{id=7, regionName=Donetsk}
[2020-04-01 10:13:01,146]DEBUG 22475[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Region{id=8, regionName=Bibrka}
[2020-04-01 10:13:01,146]DEBUG 22475[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:01,147]DEBUG 22476[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2020-04-01 10:13:01,148]DEBUG 22477[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:01,148]DEBUG 22477[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@430e85e7 testClass = RegionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@2d3acd03, testMethod = testFindByOneOfCriterions@RegionDaoTest, testException = [null]]]
[2020-04-01 10:13:01,148]DEBUG 22477[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2020-04-01 10:13:01,149]DEBUG 22478[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7f51f3b]
[2020-04-01 10:13:01,149]DEBUG 22478[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2020-04-01 10:13:01,150]DEBUG 22479[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2020-04-01 10:13:01,150]DEBUG 22479[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2020-04-01 10:13:01,150]DEBUG 22479[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@7f51f3b] after transaction
[2020-04-01 10:13:01,151]DEBUG 22480[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2020-04-01 10:13:01,151]DEBUG 22480[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2020-04-01 10:13:01,151]DEBUG 22480[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2020-04-01 10:13:01,152] INFO 22481[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@430e85e7 testClass = RegionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@2d3acd03, testMethod = testFindByOneOfCriterions@RegionDaoTest, testException = [null]]]
[2020-04-01 10:13:01,152]DEBUG 22481[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@430e85e7 testClass = RegionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@2d3acd03, testMethod = testFindByOneOfCriterions@RegionDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2020-04-01 10:13:01,152]DEBUG 22481[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RegionDaoTest]
[2020-04-01 10:13:01,153]DEBUG 22482[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RegionDaoTest]
[2020-04-01 10:13:01,153]DEBUG 22482[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@430e85e7 testClass = RegionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@1ef21a23, testMethod = [null], testException = [null]]].
[2020-04-01 10:13:01,154]DEBUG 22483[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2020-04-01 10:13:01,154]DEBUG 22483[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2020-04-01 10:13:01,154]DEBUG 22483[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2020-04-01 10:13:01,154]DEBUG 22483[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2020-04-01 10:13:01,155]DEBUG 22484[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2020-04-01 10:13:01,155]DEBUG 22484[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2020-04-01 10:13:01,155]DEBUG 22484[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2020-04-01 10:13:01,155]DEBUG 22484[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2020-04-01 10:13:01,156]DEBUG 22485[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2020-04-01 10:13:01,156]DEBUG 22485[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2020-04-01 10:13:01,156]DEBUG 22485[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2020-04-01 10:13:01,156]DEBUG 22485[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2020-04-01 10:13:01,156]DEBUG 22485[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2020-04-01 10:13:01,157]DEBUG 22486[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2020-04-01 10:13:01,157]DEBUG 22486[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2020-04-01 10:13:01,157]DEBUG 22486[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2020-04-01 10:13:01,157]DEBUG 22486[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2020-04-01 10:13:01,158]DEBUG 22487[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2020-04-01 10:13:01,158]DEBUG 22487[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2020-04-01 10:13:01,158]DEBUG 22487[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2020-04-01 10:13:01,158]DEBUG 22487[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2020-04-01 10:13:01,159]DEBUG 22488[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest' with 0 common interceptors and 1 specific interceptors
[2020-04-01 10:13:01,159]DEBUG 22488[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@1ef21a23]
[2020-04-01 10:13:01,160]DEBUG 22489[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByID' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2020-04-01 10:13:01,160]DEBUG 22489[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@430e85e7 testClass = RegionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@1ef21a23, testMethod = testFindByID@RegionDaoTest, testException = [null]]]
[2020-04-01 10:13:01,160]DEBUG 22489[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2020-04-01 10:13:01,161]DEBUG 22490[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByID]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2020-04-01 10:13:01,161]DEBUG 22490[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15857251811
[2020-04-01 10:13:01,161]DEBUG 22490[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@1d41f27c] for Hibernate transaction
[2020-04-01 10:13:01,162]DEBUG 22491[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1d41f27c]
[2020-04-01 10:13:01,162]DEBUG 22491[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2020-04-01 10:13:01,162]DEBUG 22491[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2020-04-01 10:13:01,162]DEBUG 22491[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2020-04-01 10:13:01,162]DEBUG 22491[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@430e85e7 testClass = RegionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@1ef21a23, testMethod = testFindByID@RegionDaoTest, testException = [null]]]
[2020-04-01 10:13:01,163] INFO 22492[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (4): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@ea6e1ae]; rollback [true]
[2020-04-01 10:13:01,163]DEBUG 22492[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2020-04-01 10:13:01,164]DEBUG 22493[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:01,164]DEBUG 22493[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Regions (RegionName) values (?)
[2020-04-01 10:13:01,166]DEBUG 22495[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 10
[2020-04-01 10:13:01,167]DEBUG 22496[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:01,167]DEBUG 22496[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2020-04-01 10:13:01,168]DEBUG 22497[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:01,168]DEBUG 22497[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Regions (RegionName) values (?)
[2020-04-01 10:13:01,169]DEBUG 22498[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 11
[2020-04-01 10:13:01,170]DEBUG 22499[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:01,170]DEBUG 22499[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2020-04-01 10:13:01,171]DEBUG 22500[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:01,171]DEBUG 22500[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Regions (RegionName) values (?)
[2020-04-01 10:13:01,172]DEBUG 22501[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 12
[2020-04-01 10:13:01,172]DEBUG 22501[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:01,173]DEBUG 22502[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:01,173]DEBUG 22502[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:01,174]DEBUG 22503[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2020-04-01 10:13:01,174]DEBUG 22503[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:01,174]DEBUG 22503[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:01,174]DEBUG 22503[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Region{id=11, regionName=Bibrka}
[2020-04-01 10:13:01,175]DEBUG 22504[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Region{id=12, regionName=Pidrahuilivka}
[2020-04-01 10:13:01,175]DEBUG 22504[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Region{id=10, regionName=Donetsk}
[2020-04-01 10:13:01,175]DEBUG 22504[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:01,175]DEBUG 22504[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2020-04-01 10:13:01,176]DEBUG 22505[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:01,177]DEBUG 22506[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@430e85e7 testClass = RegionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@1ef21a23, testMethod = testFindByID@RegionDaoTest, testException = [null]]]
[2020-04-01 10:13:01,177]DEBUG 22506[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2020-04-01 10:13:01,177]DEBUG 22506[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1d41f27c]
[2020-04-01 10:13:01,177]DEBUG 22506[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2020-04-01 10:13:01,178]DEBUG 22507[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2020-04-01 10:13:01,179]DEBUG 22508[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2020-04-01 10:13:01,179]DEBUG 22508[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@1d41f27c] after transaction
[2020-04-01 10:13:01,179]DEBUG 22508[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2020-04-01 10:13:01,180]DEBUG 22509[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2020-04-01 10:13:01,180]DEBUG 22509[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2020-04-01 10:13:01,180] INFO 22509[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@430e85e7 testClass = RegionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@1ef21a23, testMethod = testFindByID@RegionDaoTest, testException = [null]]]
[2020-04-01 10:13:01,181]DEBUG 22510[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@430e85e7 testClass = RegionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@1ef21a23, testMethod = testFindByID@RegionDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2020-04-01 10:13:01,181]DEBUG 22510[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RegionDaoTest]
[2020-04-01 10:13:01,182]DEBUG 22511[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RegionDaoTest]
[2020-04-01 10:13:01,182]DEBUG 22511[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@430e85e7 testClass = RegionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@6a74d20, testMethod = [null], testException = [null]]].
[2020-04-01 10:13:01,182]DEBUG 22511[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2020-04-01 10:13:01,183]DEBUG 22512[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2020-04-01 10:13:01,183]DEBUG 22512[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2020-04-01 10:13:01,183]DEBUG 22512[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2020-04-01 10:13:01,183]DEBUG 22512[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2020-04-01 10:13:01,184]DEBUG 22513[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2020-04-01 10:13:01,184]DEBUG 22513[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2020-04-01 10:13:01,184]DEBUG 22513[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2020-04-01 10:13:01,184]DEBUG 22513[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2020-04-01 10:13:01,185]DEBUG 22514[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2020-04-01 10:13:01,185]DEBUG 22514[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2020-04-01 10:13:01,185]DEBUG 22514[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2020-04-01 10:13:01,185]DEBUG 22514[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2020-04-01 10:13:01,185]DEBUG 22514[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2020-04-01 10:13:01,186]DEBUG 22515[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2020-04-01 10:13:01,186]DEBUG 22515[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2020-04-01 10:13:01,186]DEBUG 22515[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2020-04-01 10:13:01,186]DEBUG 22515[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2020-04-01 10:13:01,187]DEBUG 22516[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2020-04-01 10:13:01,187]DEBUG 22516[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2020-04-01 10:13:01,187]DEBUG 22516[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2020-04-01 10:13:01,187]DEBUG 22516[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest' with 0 common interceptors and 1 specific interceptors
[2020-04-01 10:13:01,188]DEBUG 22517[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@6a74d20]
[2020-04-01 10:13:01,188]DEBUG 22517[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testInsertOrUpdate' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2020-04-01 10:13:01,189]DEBUG 22518[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@430e85e7 testClass = RegionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@6a74d20, testMethod = testInsertOrUpdate@RegionDaoTest, testException = [null]]]
[2020-04-01 10:13:01,189]DEBUG 22518[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2020-04-01 10:13:01,190]DEBUG 22519[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testInsertOrUpdate]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2020-04-01 10:13:01,190]DEBUG 22519[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15857251811
[2020-04-01 10:13:01,190]DEBUG 22519[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@6bcc2515] for Hibernate transaction
[2020-04-01 10:13:01,190]DEBUG 22519[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@6bcc2515]
[2020-04-01 10:13:01,191]DEBUG 22520[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2020-04-01 10:13:01,191]DEBUG 22520[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2020-04-01 10:13:01,191]DEBUG 22520[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2020-04-01 10:13:01,191]DEBUG 22520[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@430e85e7 testClass = RegionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@6a74d20, testMethod = testInsertOrUpdate@RegionDaoTest, testException = [null]]]
[2020-04-01 10:13:01,192] INFO 22521[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (5): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@ea6e1ae]; rollback [true]
[2020-04-01 10:13:01,192]DEBUG 22521[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2020-04-01 10:13:01,192]DEBUG 22521[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:01,193]DEBUG 22522[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Regions (RegionName) values (?)
[2020-04-01 10:13:01,194]DEBUG 22523[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 13
[2020-04-01 10:13:01,194]DEBUG 22523[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:01,195]DEBUG 22524[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2020-04-01 10:13:01,195]DEBUG 22524[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:01,195]DEBUG 22524[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Regions (RegionName) values (?)
[2020-04-01 10:13:01,196]DEBUG 22525[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 14
[2020-04-01 10:13:01,197]DEBUG 22526[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:01,197]DEBUG 22526[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2020-04-01 10:13:01,198]DEBUG 22527[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:01,198]DEBUG 22527[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Regions (RegionName) values (?)
[2020-04-01 10:13:01,199]DEBUG 22528[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 15
[2020-04-01 10:13:01,199]DEBUG 22528[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:01,200]DEBUG 22529[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:01,201]DEBUG 22530[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:01,201]DEBUG 22530[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2020-04-01 10:13:01,201]DEBUG 22530[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:01,202]DEBUG 22531[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:01,202]DEBUG 22531[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Region{id=13, regionName=Donetsk}
[2020-04-01 10:13:01,202]DEBUG 22531[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Region{id=14, regionName=Bibrka}
[2020-04-01 10:13:01,202]DEBUG 22531[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Region{id=15, regionName=Pidrahuilivka}
[2020-04-01 10:13:01,203]DEBUG 22532[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:01,203]DEBUG 22532[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID1_0_, this_.RegionName as RegionName1_0_ from Regions this_
[2020-04-01 10:13:01,204]DEBUG 22533[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2020-04-01 10:13:01,204]DEBUG 22533[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Region#13]
[2020-04-01 10:13:01,205]DEBUG 22534[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Region#14]
[2020-04-01 10:13:01,205]DEBUG 22534[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Region#15]
[2020-04-01 10:13:01,205]DEBUG 22534[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2020-04-01 10:13:01,206]DEBUG 22535[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:01,206]DEBUG 22535[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2020-04-01 10:13:01,206]DEBUG 22535[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:01,207]DEBUG 22536[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:01,207]DEBUG 22536[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2020-04-01 10:13:01,207]DEBUG 22536[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:01,207]DEBUG 22536[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:01,208]DEBUG 22537[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Region{id=13, regionName=Donetsk}
[2020-04-01 10:13:01,208]DEBUG 22537[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Region{id=14, regionName=Bibrka}
[2020-04-01 10:13:01,208]DEBUG 22537[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Region{id=15, regionName=Pidrahuilivka}
[2020-04-01 10:13:01,208]DEBUG 22537[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:01,209]DEBUG 22538[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2020-04-01 10:13:01,209]DEBUG 22538[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:01,210]DEBUG 22539[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@430e85e7 testClass = RegionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@6a74d20, testMethod = testInsertOrUpdate@RegionDaoTest, testException = [null]]]
[2020-04-01 10:13:01,210]DEBUG 22539[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2020-04-01 10:13:01,210]DEBUG 22539[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@6bcc2515]
[2020-04-01 10:13:01,211]DEBUG 22540[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2020-04-01 10:13:01,212]DEBUG 22541[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2020-04-01 10:13:01,212]DEBUG 22541[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2020-04-01 10:13:01,213]DEBUG 22542[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@6bcc2515] after transaction
[2020-04-01 10:13:01,213]DEBUG 22542[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2020-04-01 10:13:01,213]DEBUG 22542[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2020-04-01 10:13:01,213]DEBUG 22542[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2020-04-01 10:13:01,214] INFO 22543[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@430e85e7 testClass = RegionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@6a74d20, testMethod = testInsertOrUpdate@RegionDaoTest, testException = [null]]]
[2020-04-01 10:13:01,214]DEBUG 22543[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@430e85e7 testClass = RegionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@6a74d20, testMethod = testInsertOrUpdate@RegionDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2020-04-01 10:13:01,215]DEBUG 22544[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RegionDaoTest]
[2020-04-01 10:13:01,215]DEBUG 22544[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RegionDaoTest]
[2020-04-01 10:13:01,215]DEBUG 22544[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@430e85e7 testClass = RegionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@3785d8ff, testMethod = [null], testException = [null]]].
[2020-04-01 10:13:01,216]DEBUG 22545[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2020-04-01 10:13:01,216]DEBUG 22545[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2020-04-01 10:13:01,216]DEBUG 22545[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2020-04-01 10:13:01,217]DEBUG 22546[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2020-04-01 10:13:01,217]DEBUG 22546[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2020-04-01 10:13:01,217]DEBUG 22546[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2020-04-01 10:13:01,217]DEBUG 22546[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2020-04-01 10:13:01,217]DEBUG 22546[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2020-04-01 10:13:01,218]DEBUG 22547[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2020-04-01 10:13:01,218]DEBUG 22547[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2020-04-01 10:13:01,218]DEBUG 22547[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2020-04-01 10:13:01,218]DEBUG 22547[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2020-04-01 10:13:01,219]DEBUG 22548[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2020-04-01 10:13:01,219]DEBUG 22548[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2020-04-01 10:13:01,219]DEBUG 22548[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2020-04-01 10:13:01,219]DEBUG 22548[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2020-04-01 10:13:01,220]DEBUG 22549[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2020-04-01 10:13:01,220]DEBUG 22549[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2020-04-01 10:13:01,220]DEBUG 22549[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2020-04-01 10:13:01,220]DEBUG 22549[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2020-04-01 10:13:01,220]DEBUG 22549[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2020-04-01 10:13:01,221]DEBUG 22550[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest' with 0 common interceptors and 1 specific interceptors
[2020-04-01 10:13:01,221]DEBUG 22550[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@3785d8ff]
[2020-04-01 10:13:01,222]DEBUG 22551[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testDelete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2020-04-01 10:13:01,222]DEBUG 22551[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@430e85e7 testClass = RegionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@3785d8ff, testMethod = testDelete@RegionDaoTest, testException = [null]]]
[2020-04-01 10:13:01,222]DEBUG 22551[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2020-04-01 10:13:01,223]DEBUG 22552[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testDelete]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2020-04-01 10:13:01,223]DEBUG 22552[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15857251812
[2020-04-01 10:13:01,223]DEBUG 22552[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@72c875c4] for Hibernate transaction
[2020-04-01 10:13:01,224]DEBUG 22553[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@72c875c4]
[2020-04-01 10:13:01,224]DEBUG 22553[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2020-04-01 10:13:01,224]DEBUG 22553[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2020-04-01 10:13:01,224]DEBUG 22553[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2020-04-01 10:13:01,225]DEBUG 22554[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@430e85e7 testClass = RegionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@3785d8ff, testMethod = testDelete@RegionDaoTest, testException = [null]]]
[2020-04-01 10:13:01,225] INFO 22554[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (6): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@ea6e1ae]; rollback [true]
[2020-04-01 10:13:01,225]DEBUG 22554[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2020-04-01 10:13:01,226]DEBUG 22555[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:01,226]DEBUG 22555[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Regions (RegionName) values (?)
[2020-04-01 10:13:01,227]DEBUG 22556[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 16
[2020-04-01 10:13:01,227]DEBUG 22556[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:01,228]DEBUG 22557[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2020-04-01 10:13:01,229]DEBUG 22558[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:01,229]DEBUG 22558[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Regions (RegionName) values (?)
[2020-04-01 10:13:01,230]DEBUG 22559[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 17
[2020-04-01 10:13:01,231]DEBUG 22560[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:01,231]DEBUG 22560[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2020-04-01 10:13:01,231]DEBUG 22560[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:01,232]DEBUG 22561[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Regions (RegionName) values (?)
[2020-04-01 10:13:01,233]DEBUG 22562[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 18
[2020-04-01 10:13:01,234]DEBUG 22563[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:01,234]DEBUG 22563[main] - org.hibernate.event.def.DefaultLoadEventListener.doLoad(DefaultLoadEventListener.java:442) - load request found matching entity in context, but it is scheduled for removal; returning null
[2020-04-01 10:13:01,235]DEBUG 22564[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:01,235]DEBUG 22564[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:01,235]DEBUG 22564[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 3 objects
[2020-04-01 10:13:01,235]DEBUG 22564[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:01,236]DEBUG 22565[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:01,236]DEBUG 22565[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Region{id=17, regionName=Bibrka}
[2020-04-01 10:13:01,236]DEBUG 22565[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Region{id=18, regionName=Pidrahuilivka}
[2020-04-01 10:13:01,236]DEBUG 22565[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Region{id=16, regionName=Donetsk}
[2020-04-01 10:13:01,237]DEBUG 22566[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Regions
[2020-04-01 10:13:01,237]DEBUG 22566[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:01,237]DEBUG 22566[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions where ID=?
[2020-04-01 10:13:01,237]DEBUG 22566[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2020-04-01 10:13:01,238]DEBUG 22567[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:01,239]DEBUG 22568[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:01,239]DEBUG 22568[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2020-04-01 10:13:01,240]DEBUG 22569[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:01,240]DEBUG 22569[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@430e85e7 testClass = RegionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@3785d8ff, testMethod = testDelete@RegionDaoTest, testException = [null]]]
[2020-04-01 10:13:01,240]DEBUG 22569[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2020-04-01 10:13:01,241]DEBUG 22570[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@72c875c4]
[2020-04-01 10:13:01,241]DEBUG 22570[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2020-04-01 10:13:01,242]DEBUG 22571[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2020-04-01 10:13:01,242]DEBUG 22571[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2020-04-01 10:13:01,242]DEBUG 22571[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@72c875c4] after transaction
[2020-04-01 10:13:01,243]DEBUG 22572[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2020-04-01 10:13:01,243]DEBUG 22572[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2020-04-01 10:13:01,243]DEBUG 22572[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2020-04-01 10:13:01,244] INFO 22573[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@430e85e7 testClass = RegionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@3785d8ff, testMethod = testDelete@RegionDaoTest, testException = [null]]]
[2020-04-01 10:13:01,244]DEBUG 22573[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@430e85e7 testClass = RegionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@3785d8ff, testMethod = testDelete@RegionDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2020-04-01 10:13:01,245]DEBUG 22574[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RegionDaoTest]
[2020-04-01 10:13:01,245]DEBUG 22574[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RegionDaoTest]
[2020-04-01 10:13:01,246]DEBUG 22575[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@430e85e7 testClass = RegionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@719434bf, testMethod = [null], testException = [null]]].
[2020-04-01 10:13:01,246]DEBUG 22575[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2020-04-01 10:13:01,246]DEBUG 22575[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2020-04-01 10:13:01,247]DEBUG 22576[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2020-04-01 10:13:01,247]DEBUG 22576[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2020-04-01 10:13:01,247]DEBUG 22576[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2020-04-01 10:13:01,247]DEBUG 22576[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2020-04-01 10:13:01,247]DEBUG 22576[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2020-04-01 10:13:01,248]DEBUG 22577[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2020-04-01 10:13:01,248]DEBUG 22577[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2020-04-01 10:13:01,248]DEBUG 22577[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2020-04-01 10:13:01,248]DEBUG 22577[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2020-04-01 10:13:01,249]DEBUG 22578[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2020-04-01 10:13:01,249]DEBUG 22578[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2020-04-01 10:13:01,249]DEBUG 22578[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2020-04-01 10:13:01,249]DEBUG 22578[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2020-04-01 10:13:01,250]DEBUG 22579[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2020-04-01 10:13:01,250]DEBUG 22579[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2020-04-01 10:13:01,250]DEBUG 22579[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2020-04-01 10:13:01,250]DEBUG 22579[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2020-04-01 10:13:01,250]DEBUG 22579[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2020-04-01 10:13:01,251]DEBUG 22580[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2020-04-01 10:13:01,251]DEBUG 22580[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RegionDaoTest' with 0 common interceptors and 1 specific interceptors
[2020-04-01 10:13:01,251]DEBUG 22580[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@719434bf]
[2020-04-01 10:13:01,252]DEBUG 22581[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testContextFile' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2020-04-01 10:13:01,252]DEBUG 22581[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@430e85e7 testClass = RegionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@719434bf, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2020-04-01 10:13:01,253]DEBUG 22582[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2020-04-01 10:13:01,253]DEBUG 22582[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testContextFile]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2020-04-01 10:13:01,254]DEBUG 22583[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15857251812
[2020-04-01 10:13:01,254]DEBUG 22583[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@20cdcf37] for Hibernate transaction
[2020-04-01 10:13:01,254]DEBUG 22583[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@20cdcf37]
[2020-04-01 10:13:01,254]DEBUG 22583[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2020-04-01 10:13:01,255]DEBUG 22584[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2020-04-01 10:13:01,255]DEBUG 22584[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2020-04-01 10:13:01,255]DEBUG 22584[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@430e85e7 testClass = RegionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@719434bf, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2020-04-01 10:13:01,255] INFO 22584[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (7): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@ea6e1ae]; rollback [true]
[2020-04-01 10:13:01,256]DEBUG 22585[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2020-04-01 10:13:01,256]DEBUG 22585[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:01,256]DEBUG 22585[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Regions (RegionName) values (?)
[2020-04-01 10:13:01,257]DEBUG 22586[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 19
[2020-04-01 10:13:01,258]DEBUG 22587[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:01,258]DEBUG 22587[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2020-04-01 10:13:01,259]DEBUG 22588[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:01,259]DEBUG 22588[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Regions (RegionName) values (?)
[2020-04-01 10:13:01,260]DEBUG 22589[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 20
[2020-04-01 10:13:01,261]DEBUG 22590[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:01,261]DEBUG 22590[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2020-04-01 10:13:01,261]DEBUG 22590[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:01,262]DEBUG 22591[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Regions (RegionName) values (?)
[2020-04-01 10:13:01,263]DEBUG 22592[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 21
[2020-04-01 10:13:01,263]DEBUG 22592[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:01,264]DEBUG 22593[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2020-04-01 10:13:01,264]DEBUG 22593[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2020-04-01 10:13:01,264]DEBUG 22593[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2020-04-01 10:13:01,265]DEBUG 22594[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2020-04-01 10:13:01,265]DEBUG 22594[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2020-04-01 10:13:01,265]DEBUG 22594[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Region{id=21, regionName=Pidrahuilivka}
[2020-04-01 10:13:01,265]DEBUG 22594[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Region{id=19, regionName=Donetsk}
[2020-04-01 10:13:01,266]DEBUG 22595[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Region{id=20, regionName=Bibrka}
[2020-04-01 10:13:01,266]DEBUG 22595[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2020-04-01 10:13:01,266]DEBUG 22595[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2020-04-01 10:13:01,267]DEBUG 22596[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2020-04-01 10:13:01,267]DEBUG 22596[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@430e85e7 testClass = RegionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@719434bf, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2020-04-01 10:13:01,268]DEBUG 22597[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2020-04-01 10:13:01,268]DEBUG 22597[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@20cdcf37]
[2020-04-01 10:13:01,268]DEBUG 22597[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2020-04-01 10:13:01,269]DEBUG 22598[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2020-04-01 10:13:01,270]DEBUG 22599[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2020-04-01 10:13:01,270]DEBUG 22599[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@20cdcf37] after transaction
[2020-04-01 10:13:01,270]DEBUG 22599[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2020-04-01 10:13:01,270]DEBUG 22599[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2020-04-01 10:13:01,271]DEBUG 22600[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2020-04-01 10:13:01,271] INFO 22600[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@430e85e7 testClass = RegionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@719434bf, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2020-04-01 10:13:01,271]DEBUG 22600[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@430e85e7 testClass = RegionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RegionDaoTest@719434bf, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2020-04-01 10:13:01,272]DEBUG 22601[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestClass(DirtiesContextTestExecutionListener.java:113) - After test class: context [[TestContext@430e85e7 testClass = RegionDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = [null], testMethod = [null], testException = [null]]], dirtiesContext [false].
[2020-04-01 10:13:01,284] INFO 22613[Thread-0] - org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1002) - Closing org.springframework.context.support.GenericApplicationContext@7df992df: startup date [Wed Apr 01 10:12:40 EEST 2020]; root of context hierarchy
[2020-04-01 10:13:01,288]DEBUG 22617[Thread-0] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'lifecycleProcessor'
[2020-04-01 10:13:01,288] INFO 22617[Thread-0] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:422) - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1c90ca10: defining beans [transactionManager,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,orderStatusDao,creditCardTypeDao,orderDao,userDao,regionDao,productDao,orderItemDao,customerTypeDao,roleDao,dimensionDao,sessionFactory]; root of factory hierarchy
[2020-04-01 10:13:01,289]DEBUG 22618[Thread-0] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:477) - Retrieved dependent beans for bean 'dimensionDao': [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest, com.softserveinc.edu.oms.persistence.dao.UserDaoTest, com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase, com.softserveinc.edu.oms.persistence.dao.OrderDaoTest, com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest, com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest, com.softserveinc.edu.oms.persistence.dao.ProductDaoTest, com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest, com.softserveinc.edu.oms.persistence.dao.RegionDaoTest]
[2020-04-01 10:13:01,291] INFO 22620[Thread-1] - org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1002) - Closing org.springframework.context.support.GenericApplicationContext@1cdcbf72: startup date [Wed Apr 01 10:12:52 EEST 2020]; root of context hierarchy
[2020-04-01 10:13:01,294]DEBUG 22623[Thread-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'lifecycleProcessor'
[2020-04-01 10:13:01,294] INFO 22623[Thread-1] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:422) - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@43dde3c1: defining beans [transactionManager,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,orderStatusDao,creditCardTypeDao,orderDao,userDao,regionDao,productDao,orderItemDao,customerTypeDao,roleDao,dimensionDao,sessionFactory]; root of factory hierarchy
[2020-04-01 10:13:01,295]DEBUG 22624[Thread-1] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:477) - Retrieved dependent beans for bean 'dimensionDao': [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]
[2020-04-01 10:13:01,298]DEBUG 22627[Thread-1] - org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:172) - Invoking destroy() on bean with name 'sessionFactory'
[2020-04-01 10:13:01,298]DEBUG 22627[Thread-0] - org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:172) - Invoking destroy() on bean with name 'sessionFactory'
[2020-04-01 10:13:01,298] INFO 22627[Thread-1] - org.springframework.orm.hibernate3.AbstractSessionFactoryBean.destroy(AbstractSessionFactoryBean.java:246) - Closing Hibernate SessionFactory
[2020-04-01 10:13:01,299] INFO 22628[Thread-0] - org.springframework.orm.hibernate3.AbstractSessionFactoryBean.destroy(AbstractSessionFactoryBean.java:246) - Closing Hibernate SessionFactory
[2020-04-01 10:13:01,300] INFO 22629[Thread-0] - org.hibernate.impl.SessionFactoryImpl.close(SessionFactoryImpl.java:927) - closing
[2020-04-01 10:13:01,299] INFO 22628[Thread-1] - org.hibernate.impl.SessionFactoryImpl.close(SessionFactoryImpl.java:927) - closing
[2020-04-01 10:13:01,300] INFO 22629[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:234) - Running hbm2ddl schema export
[2020-04-01 10:13:01,300] INFO 22629[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:234) - Running hbm2ddl schema export
[2020-04-01 10:13:01,301]DEBUG 22630[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:252) - import file not found: /import.sql
[2020-04-01 10:13:01,302] INFO 22631[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:262) - exporting generated schema to database
[2020-04-01 10:13:01,302]DEBUG 22631[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:252) - import file not found: /import.sql
[2020-04-01 10:13:01,302] INFO 22631[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:262) - exporting generated schema to database
[2020-04-01 10:13:01,304]DEBUG 22633[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems drop foreign key FKA2B1AD3262E1ABF7
[2020-04-01 10:13:01,305]DEBUG 22634[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems drop foreign key FKA2B1AD3262E1ABF7
[2020-04-01 10:13:01,330]DEBUG 22659[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems drop foreign key FKA2B1AD32A6376397
[2020-04-01 10:13:01,347]DEBUG 22676[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table OrderItems drop foreign key FKA2B1AD3262E1ABF7
[2020-04-01 10:13:01,347]DEBUG 22676[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - Can't DROP 'FKA2B1AD3262E1ABF7'; check that column/key exists
[2020-04-01 10:13:01,348]DEBUG 22677[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems drop foreign key FKA2B1AD32A6376397
[2020-04-01 10:13:01,366]DEBUG 22695[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems drop foreign key FKA2B1AD32BCDB3C97
[2020-04-01 10:13:01,379]DEBUG 22708[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table OrderItems drop foreign key FKA2B1AD32A6376397
[2020-04-01 10:13:01,380]DEBUG 22709[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - Can't DROP 'FKA2B1AD32A6376397'; check that column/key exists
[2020-04-01 10:13:01,380]DEBUG 22709[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems drop foreign key FKA2B1AD32BCDB3C97
[2020-04-01 10:13:01,405]DEBUG 22734[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders drop foreign key FK8D444F05990DB877
[2020-04-01 10:13:01,420]DEBUG 22749[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table OrderItems drop foreign key FKA2B1AD32BCDB3C97
[2020-04-01 10:13:01,420]DEBUG 22749[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - Can't DROP 'FKA2B1AD32BCDB3C97'; check that column/key exists
[2020-04-01 10:13:01,421]DEBUG 22750[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders drop foreign key FK8D444F05990DB877
[2020-04-01 10:13:01,441]DEBUG 22770[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders drop foreign key FK8D444F05C0F431DD
[2020-04-01 10:13:01,456]DEBUG 22785[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table Orders drop foreign key FK8D444F05990DB877
[2020-04-01 10:13:01,457]DEBUG 22786[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - Can't DROP 'FK8D444F05990DB877'; check that column/key exists
[2020-04-01 10:13:01,457]DEBUG 22786[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders drop foreign key FK8D444F05C0F431DD
[2020-04-01 10:13:01,479]DEBUG 22808[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders drop foreign key FK8D444F05F161465
[2020-04-01 10:13:01,492]DEBUG 22821[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table Orders drop foreign key FK8D444F05C0F431DD
[2020-04-01 10:13:01,492]DEBUG 22821[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - Can't DROP 'FK8D444F05C0F431DD'; check that column/key exists
[2020-04-01 10:13:01,493]DEBUG 22822[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders drop foreign key FK8D444F05F161465
[2020-04-01 10:13:01,517]DEBUG 22846[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users drop foreign key FK4E39DE83D05058F
[2020-04-01 10:13:01,533]DEBUG 22862[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table Orders drop foreign key FK8D444F05F161465
[2020-04-01 10:13:01,533]DEBUG 22862[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - Can't DROP 'FK8D444F05F161465'; check that column/key exists
[2020-04-01 10:13:01,533]DEBUG 22862[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users drop foreign key FK4E39DE83D05058F
[2020-04-01 10:13:01,557]DEBUG 22886[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users drop foreign key FK4E39DE89AEF426F
[2020-04-01 10:13:01,571]DEBUG 22900[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table Users drop foreign key FK4E39DE83D05058F
[2020-04-01 10:13:01,572]DEBUG 22901[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - Can't DROP 'FK4E39DE83D05058F'; check that column/key exists
[2020-04-01 10:13:01,572]DEBUG 22901[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users drop foreign key FK4E39DE89AEF426F
[2020-04-01 10:13:01,585]DEBUG 22914[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users drop foreign key FK4E39DE8FEAD4DCF
[2020-04-01 10:13:01,599]DEBUG 22928[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table Users drop foreign key FK4E39DE89AEF426F
[2020-04-01 10:13:01,599]DEBUG 22928[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - Can't DROP 'FK4E39DE89AEF426F'; check that column/key exists
[2020-04-01 10:13:01,599]DEBUG 22928[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users drop foreign key FK4E39DE8FEAD4DCF
[2020-04-01 10:13:01,618]DEBUG 22947[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists CardType
[2020-04-01 10:13:01,630]DEBUG 22959[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists CustomerTypes
[2020-04-01 10:13:01,639]DEBUG 22968[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table Users drop foreign key FK4E39DE8FEAD4DCF
[2020-04-01 10:13:01,639]DEBUG 22968[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - Can't DROP 'FK4E39DE8FEAD4DCF'; check that column/key exists
[2020-04-01 10:13:01,639]DEBUG 22968[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists CardType
[2020-04-01 10:13:01,641]DEBUG 22970[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists CustomerTypes
[2020-04-01 10:13:01,641]DEBUG 22970[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists Dimensions
[2020-04-01 10:13:01,642]DEBUG 22971[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists Dimensions
[2020-04-01 10:13:01,645]DEBUG 22974[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists OrderItems
[2020-04-01 10:13:01,646]DEBUG 22975[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists OrderItems
[2020-04-01 10:13:01,651]DEBUG 22980[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists OrderStatuses
[2020-04-01 10:13:01,651]DEBUG 22980[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists OrderStatuses
[2020-04-01 10:13:01,655]DEBUG 22984[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists Orders
[2020-04-01 10:13:01,656]DEBUG 22985[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists Orders
[2020-04-01 10:13:01,660]DEBUG 22989[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists Products
[2020-04-01 10:13:01,661]DEBUG 22990[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists Products
[2020-04-01 10:13:01,665]DEBUG 22994[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists Regions
[2020-04-01 10:13:01,665]DEBUG 22994[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists Regions
[2020-04-01 10:13:01,670]DEBUG 22999[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists Roles
[2020-04-01 10:13:01,671]DEBUG 23000[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists Roles
[2020-04-01 10:13:01,674]DEBUG 23003[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists Users
[2020-04-01 10:13:01,675]DEBUG 23004[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists Users
[2020-04-01 10:13:01,680] INFO 23009[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:281) - schema export complete
[2020-04-01 10:13:01,680] INFO 23009[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:281) - schema export complete
[2020-04-01 10:13:01,681] INFO 23010[Thread-0] - org.hibernate.connection.DriverManagerConnectionProvider.close(DriverManagerConnectionProvider.java:170) - cleaning up connection pool: jdbc:mysql://localhost:3306/lv316oms_test
[2020-04-01 10:13:01,681] INFO 23010[Thread-1] - org.hibernate.connection.DriverManagerConnectionProvider.close(DriverManagerConnectionProvider.java:170) - cleaning up connection pool: jdbc:mysql://localhost:3306/lv316oms_test
