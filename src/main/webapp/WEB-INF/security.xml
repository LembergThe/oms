<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/security
http://www.springframework.org/schema/security/spring-security-3.0.xsd">

	<http auto-config="false" use-expressions="true"
		access-denied-page="/error403.jsp" entry-point-ref="authenticationEntryPoint">

		<intercept-url pattern="/login" access="permitAll" />
		<intercept-url pattern="/users*" access="hasRole('ROLE_Administrator')" />
		<intercept-url pattern="/editU*" access="hasRole('ROLE_Administrator')" />
		<intercept-url pattern="/editI*" access="hasRole('ROLE_Supervisor')" />
		<intercept-url pattern="/delete/*" access="hasRole('ROLE_Administrator')" />

		<intercept-url pattern="/item*"
			access="hasAnyRole('ROLE_Supervisor')" />

		<intercept-url pattern="/userInfo*"
			access="hasAnyRole('ROLE_Administrator','ROLE_Customer','ROLE_Merchandiser','ROLE_Supervisor')" />

		<intercept-url pattern="/order*"
			access="hasAnyRole('ROLE_Administrator','ROLE_Customer','ROLE_Merchandiser')" />

		<intercept-url pattern="/orderItems*"
			access="hasAnyRole('ROLE_Administrator','ROLE_Customer','ROLE_Merchandiser')" />
			
		<intercept-url pattern="/merchandiser*"
			access="hasAnyRole('ROLE_Merchandiser')" />
			
		<intercept-url pattern="/listProduct*"
			access="hasAnyRole('ROLE_Customer')" />

		<logout logout-url="/logout.htm" logout-success-url="/login.htm" />
		<remember-me />

		<custom-filter position="CONCURRENT_SESSION_FILTER" ref="concurrencyFilter" />
		<custom-filter position="FORM_LOGIN_FILTER" ref="authenticationFilter" />

		<session-management
			session-authentication-strategy-ref="sas" />
	</http>

	<beans:bean id="authenticationFilter"
		class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter">
		<beans:property name="sessionAuthenticationStrategy"
			ref="sas" />
		<beans:property name="authenticationManager" ref="authenticationManager" />

		<beans:property name="authenticationFailureHandler"
			ref="customAuthenticationFailureHandler" />
		<beans:property name="authenticationSuccessHandler"
			ref="customAuthenticationSuccessHandler" />
	</beans:bean>

	<beans:bean id="customAuthenticationFailureHandler"
		class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
		<beans:property name="defaultFailureUrl" value="/login.htm?login_error=true" />
	</beans:bean>

	<beans:bean id="customAuthenticationSuccessHandler"
		class="org.springframework.security.web.authentication.SimpleUrlAuthenticationSuccessHandler">
		<beans:property name="defaultTargetUrl" value="/" />
	</beans:bean>

	<beans:bean id="authenticationEntryPoint"
		class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
		<beans:property name="loginFormUrl" value="/login.htm" />
	</beans:bean>


	<authentication-manager alias="authenticationManager">
		<authentication-provider user-service-ref="userService">
		</authentication-provider>
	</authentication-manager>

	<beans:bean id="concurrencyFilter"
		class="org.springframework.security.web.session.ConcurrentSessionFilter">
		<beans:property name="sessionRegistry" ref="sessionRegistry" />
		<beans:property name="expiredUrl" value="/session-expired.htm" />
	</beans:bean>

	<beans:bean id="sas"
		class="org.springframework.security.web.authentication.session.ConcurrentSessionControlStrategy">
		<beans:constructor-arg name="sessionRegistry"
			ref="sessionRegistry" />
		<beans:property name="maximumSessions" value="1" />
	</beans:bean>

	<beans:bean id="sessionRegistry"
		class="org.springframework.security.core.session.SessionRegistryImpl" />

</beans:beans>